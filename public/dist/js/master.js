/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/js/Hawk-v2.js":
/*!***************************!*\
  !*** ./src/js/Hawk-v2.js ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\nvar _class25;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _get() { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get.bind(); } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(arguments.length < 3 ? target : receiver); } return desc.value; }; } return _get.apply(this, arguments); }\n\nfunction _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\nvar Hawk = {};\nHawk = {\n  w: window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth,\n  h: window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight,\n  anchorSuffix: '-anchor'\n};\nHawk.RequestStatus = {\n  SUCCESS: 0,\n  ERROR: 1,\n  EXCEPTION: 2\n};\n\nHawk.getLocation = function () {\n  return window.location;\n};\n\nHawk.getPath = function () {\n  return Hawk.getLocation().pathname;\n};\n\nHawk.getHash = function () {\n  return Hawk.getLocation().hash;\n};\n\nHawk.anchorRegex = new RegExp(\"^[^\\/]+$\");\n\nHawk.getPreparedHash = function (withoutLeadingHashSign) {\n  var regexp = new RegExp(\"[^a-zA-Z0-9\\-_]+\", 'g');\n  var hash = this.getHash().replaceAll(regexp, \"\");\n\n  if (typeof withoutLeadingHashSign == 'undefined' || !withoutLeadingHashSign) {\n    return '#' + hash;\n  } else {\n    return hash;\n  }\n};\n\nHawk.isInObject = function (value, obj) {\n  for (var k in obj) {\n    if (!obj.hasOwnProperty(k)) {\n      continue;\n    }\n\n    if (obj[k] === value) {\n      return true;\n    }\n  }\n\n  return false;\n};\n\nHawk.createBundleFromString = function (str) {\n  var parts = str.split('&');\n  var result = {};\n  var current;\n  var data;\n  var key;\n  var value;\n\n  for (var i in parts) {\n    current = parts[i];\n    data = current.split('=');\n    key = data[0];\n    value = data[1];\n    result[key] = value;\n  }\n\n  return result;\n};\n\nHawk.createStringFromBundle = function (bundle) {\n  var parts = [];\n\n  for (var i in bundle) {\n    console.log(i + \"=\" + bundle[i]);\n    parts.push(i + \"=\" + bundle[i]);\n  }\n\n  return parts.join('&');\n};\n\nHawk.mergeObjects = function (mainObject, object) {\n  var result = {};\n\n  if (object === undefined) {\n    return mainObject;\n  }\n\n  for (var property in mainObject) {\n    if (mainObject.hasOwnProperty(property)) {\n      result[property] = object.hasOwnProperty(property) ? object[property] : mainObject[property];\n    } //console.log(\"object.\" + property + \": \" + result[property]);\n\n  }\n\n  return result;\n};\n\nHawk.mergeWholeObjects = function (mainObject, object) {\n  var result = {};\n\n  if (object === undefined) {\n    return mainObject;\n  }\n\n  for (var property in mainObject) {\n    if (mainObject.hasOwnProperty(property)) {\n      result[property] = mainObject[property];\n    } //console.log(\"object.\" + property + \": \" + result[property]);\n\n  }\n\n  for (var property in object) {\n    if (object.hasOwnProperty(property)) {\n      result[property] = object[property];\n    } //console.log(\"object.\" + property + \": \" + result[property]);\n\n  }\n\n  return result;\n};\n\nHawk.addZeros = function (number, digits) {\n  number = number + \"\";\n\n  for (var i = 1; i <= digits; i++) {\n    if (number.length < digits) {\n      number = \"0\" + number;\n    }\n  }\n\n  return number;\n};\n\nHawk.jQueryFromString = function (html) {\n  return $(html).filter(function () {\n    return this.nodeType != 3; // Node.TEXT_NODE\n  });\n};\n\nHawk.scrollToElement = function (options) {\n  var defaultOptions = {\n    container: window,\n    anchor: '#top' + Hawk.anchorSuffix,\n    callback: function callback() {},\n    delay: 0,\n    duration: 800,\n    offset: 0\n  };\n  options = Hawk.mergeObjects(defaultOptions, options);\n  var offset = typeof options.offset == 'function' ? options.offset() : options.offset;\n  setTimeout(function () {\n    $(options.container).scrollTo(options.anchor, options.duration, {\n      'axis': 'y',\n      'offset': offset,\n      onAfter: function onAfter() {\n        options.callback();\n      }\n    });\n  }, options.delay);\n  return this;\n};\n\nHawk.Validator = {};\n\nHawk.Validator.isEmail = function (email) {\n  if (/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,4})+$/.test(email)) {\n    return true;\n  } else {\n    return false;\n  }\n};\n\nHawk.Validator.isPhoneNumber = function (number) {\n  if (/^\\+?[0-9]+[0-9\\s]+$/.test(number)) {\n    return true;\n  } else {\n    return false;\n  }\n};\n\nHawk.Validator.isNumberPositive = function (number) {\n  if (/^[0-9]+((,|\\.){1}[0-9]+)?$/.test(number)) {\n    number = number.replace(\",\", \".\");\n    return parseFloat(number) > 0;\n  } else {\n    return false;\n  }\n};\n\nHawk.Validator.isNumber = function (number) {\n  if (/^[0-9]+$/.test(number)) {\n    return true;\n  } else {\n    return false;\n  }\n};\n\nHawk.Validator.isRationalNumber = function (number) {\n  if (/^(\\-)?[0-9]+((,|\\.)[0-9]+)?$/.test(number)) {\n    return true;\n  } else {\n    return false;\n  }\n};\n\nHawk.Validator.isShortPhoneNumber = function (number) {\n  if (/^[0-9\\s]+$/.test(number)) {\n    number = number.replace(\"\\s\", \"\");\n    return number.length == 9;\n  } else {\n    return false;\n  }\n};\n\nHawk.Validator.isNotEmpty = function (value) {\n  if (value.trim().length > 0) {\n    return true;\n  } else {\n    return false;\n  }\n};\n\nHawk.Validator.longerThan = function (str, length) {\n  if (str.trim().length > length) {\n    return true;\n  } else {\n    return false;\n  }\n};\n\nHawk.Validator.isSomethingChecked = function (field) {\n  if (field.is(':checked')) {\n    return true;\n  } else {\n    return false;\n  }\n};\n\nHawk.TextParser = {};\n\nHawk.TextParser.replaceAll = function (text, characters) {\n  for (var i in characters) {\n    text = text.replace(new RegExp(i, \"g\"), characters[i]);\n  }\n\n  return text;\n};\n\nHawk.TextParser.transferPolishCharactersIntoLatin = function (text) {\n  var equivalents = {\n    'ą': 'a',\n    'Ą': 'A',\n    'ć': 'c',\n    'Ć': 'C',\n    'ę': 'e',\n    'Ę': 'E',\n    'ł': 'l',\n    'Ł': 'L',\n    'ń': 'n',\n    'Ń': 'N',\n    'ó': 'o',\n    'Ó': 'O',\n    'ś': 's',\n    'Ś': 'S',\n    'ź': 'z',\n    'Ź': 'Z',\n    'ż': 'z',\n    'Ż': 'Z'\n  };\n  text = Hawk.TextParser.replaceAll(text, equivalents);\n  return text;\n};\n\nHawk.TextParser.preparePlainPath = function (text) {\n  text = Hawk.TextParser.transferPolishCharactersIntoLatin(text.trim());\n  var equivalents = {\n    ' - ': '-',\n    '- ': '-',\n    ' -': '-'\n  };\n  text = Hawk.TextParser.replaceAll(text, equivalents);\n  var specialCharacters = {\n    ' ': '-',\n    '&nbsp;': '-'\n  };\n  text = Hawk.TextParser.replaceAll(text, specialCharacters);\n  text = text.replace(new RegExp(\"[^a-zA-Z0-9_\\\\-\\/=\\.&%\\?\\(\\)]+\", \"g\"), \"\").toLowerCase();\n\n  if (text.length > 0) {\n    return text;\n  } else {\n    return \"-\";\n  }\n};\n\nHawk.TextManager = {};\n\nHawk.TextManager.makeLine = function (text) {\n  return \"<span class=\\\"line\\\">\" + text + \"</span> \";\n};\n\nHawk.TextManager.findWordEnd = function (text, index, backwards) {\n  if (typeof backwards == 'undefined') {\n    backwards = false;\n  }\n\n  if (backwards) {\n    var spaceIndex = text.lastIndexOf(\" \", index);\n  } else {\n    var spaceIndex = text.indexOf(\" \", index);\n  }\n\n  if (spaceIndex < 0) {\n    return text.length;\n  } else {\n    return spaceIndex;\n  }\n};\n\nHawk.TextManager.findLine = function (text, start, end) {\n  return text.substring(start, end);\n};\n\nHawk.TextManager.makeLines = function (text, lines, backwards, lineLengthOffset) {\n  if (typeof backwards == 'undefined') {\n    backwards = false;\n  }\n\n  if (typeof lineLengthOffset == 'undefined') {\n    lineLengthOffset = 0;\n  }\n\n  text = text.trim();\n  var lineLength = text.length / lines - lineLengthOffset;\n  var result = \"\";\n  var breakPosition = 0;\n  var start = 0;\n  var line = \"\";\n  var i = 1;\n\n  if (text.length > 0) {\n    while (i < lines + 1) {\n      breakPosition = Hawk.TextManager.findWordEnd(text, lineLength * i, i == 1 && backwards);\n      line = Hawk.TextManager.findLine(text, start, breakPosition);\n      line = line.trim();\n\n      if (line.length > 0) {\n        result += Hawk.TextManager.makeLine(line);\n        start = breakPosition + 1;\n        i++;\n      } else {\n        return Hawk.TextManager.makeLines(text, lines, backwards, lineLengthOffset + 1);\n      }\n    }\n  }\n\n  return result;\n};\n\nHawk.TextManager.makeEqualLines = function (text, lines) {\n  var resultText = text.replace(\"/\\s+/\", \" \");\n  var words = resultText.split(' ');\n  var wordsInLine = Math.ceil(words.length / lines);\n  var result = \"\";\n\n  for (var i = 0; i < lines; i++) {\n    if (i == 0) {\n      result += words.slice(0, wordsInLine).join(\" \");\n    } else {\n      result += Hawk.TextManager.makeLine(words.slice(i * wordsInLine, (i + 1) * wordsInLine).join(\" \"));\n    }\n  }\n\n  return result;\n};\n\nHawk.RequestStatus = {\n  SUCCESS: 0,\n  ERROR: 1,\n  EXCEPTION: 2,\n  PENDING: 100\n};\nHawk.RequestType = {\n  GET: 'GET',\n  POST: 'POST'\n};\n\nHawk.AjaxRequestManager = function (options) {\n  var that = this;\n  this.ajaxRequest;\n  this.ajaxRequestWorking = false;\n  this.defaultOptions = {\n    onSuccess: function onSuccess() {},\n    onError: function onError() {},\n    onException: function onException() {},\n    onFailure: function onFailure() {},\n    onComplete: function onComplete() {}\n  };\n  this.options = Hawk.mergeObjects(this.defaultOptions, options);\n\n  this.post = function (path, bundle, callbacks) {\n    this.sendRequest(path, Hawk.RequestType.POST, bundle, callbacks);\n  };\n\n  this.get = function (path, callbacks) {\n    this.sendRequest(path, Hawk.RequestType.GET, {}, callbacks);\n  };\n\n  this.sendRequest = function (path, type, bundle, callbacks) {\n    if (this.ajaxRequestWorking) {\n      return false;\n    }\n\n    this.ajaxRequestWorking = true;\n    var onSuccess = callbacks.onSuccess || this.options.onSuccess;\n    var onFailure = callbacks.onFailure || this.options.onFailure;\n    var onError = callbacks.onError || this.options.onError;\n    var onException = callbacks.onException || this.options.onException;\n    var onComplete = callbacks.onComplete || this.options.onComplete;\n    this.ajaxRequest = $.ajax({\n      type: type,\n      url: path,\n      dataType: \"json\",\n      data: bundle,\n      success: function success(result) {\n        console.log(result);\n        that.ajaxRequestWorking = false;\n\n        if (typeof result.status != 'undefined' && result.status == Hawk.RequestStatus.SUCCESS) {\n          console.log(\"SUCCESS\");\n          onSuccess(result);\n        } else if (typeof result.status != 'undefined' && result.status == Hawk.RequestStatus.ERROR) {\n          console.log(\"ERROR\");\n          onError(result);\n        } else {\n          console.log(\"EXCEPTION\");\n          onException(result);\n        }\n      },\n      error: function error(jqXHR, textStatus, errorThrown) {\n        console.log(jqXHR.responseText);\n        that.ajaxRequestWorking = false;\n        onFailure(jqXHR.responseText);\n      },\n      complete: function complete() {\n        onComplete();\n      }\n    });\n    return this;\n  };\n};\n\nHawk.FieldController = /*#__PURE__*/function () {\n  function _class(fields, options) {\n    _classCallCheck(this, _class);\n\n    this.defaultOptions = {\n      onChange: function onChange(field, value, allFields) {},\n      onClick: function onClick(field, allFields) {},\n      onKeyDown: function onKeyDown(field, value, allFields) {}\n    };\n    this.fields = $(fields);\n    this.options = Hawk.mergeObjects(this.defaultOptions, options);\n  }\n\n  _createClass(_class, [{\n    key: \"run\",\n    value: function run() {\n      var that = this;\n\n      if (this.options.onChange !== this.defaultOptions.onChange) {\n        this.fields.change(function (e) {\n          that.options.onChange($(this), $(this).val(), that.fields);\n        });\n      }\n\n      if (this.options.onClick !== this.defaultOptions.onClick) {\n        this.fields.click(function (e) {\n          that.options.onClick($(this), that.fields);\n        });\n      }\n\n      if (this.options.onKeyDown !== this.defaultOptions.onKeyDown) {\n        this.fields.keydown(function (e) {\n          setTimeout(function () {\n            that.options.onChange($(this), $(this).val(), that.fields);\n          }, 32);\n        });\n      }\n    }\n  }]);\n\n  return _class;\n}();\n\nHawk.AnchorsManager = /*#__PURE__*/function () {\n  function _class2(options) {\n    _classCallCheck(this, _class2);\n\n    this.defaultOptions = {\n      delay: 100,\n      loadingDelay: 500,\n      menu: undefined,\n      anchorSuffix: Hawk.anchorSuffix,\n      eventName: \"click.anchorsManager\",\n      offset: function offset() {\n        return 0;\n      }\n    };\n    this.options = Hawk.mergeObjects(this.defaultOptions, options);\n  }\n\n  _createClass(_class2, [{\n    key: \"getEventName\",\n    value: function getEventName() {\n      return this.options.eventName;\n    }\n  }, {\n    key: \"getAnchorSuffix\",\n    value: function getAnchorSuffix() {\n      return this.options.anchorSuffix;\n    }\n  }, {\n    key: \"getAnchorOfHash\",\n    value: function getAnchorOfHash(hash) {\n      return hash + this.getAnchorSuffix();\n    }\n  }, {\n    key: \"goTo\",\n    value: function goTo(anchor) {\n      Hawk.scrollToElement({\n        anchor: anchor + this.getAnchorSuffix(),\n        offset: this.options.offset()\n      });\n    }\n  }, {\n    key: \"isLinkBlank\",\n    value: function isLinkBlank(link) {\n      return typeof link.attr('data-anchor-type') != 'undefined' && link.attr('data-anchor-type') == 'blank';\n    }\n  }, {\n    key: \"movingAction\",\n    value: function movingAction(e) {\n      var regex = /#{1}.+$/;\n      var link = $(e.currentTarget);\n      var href = link.attr('href');\n      var anchor;\n      var extraDelay = 0;\n\n      if (anchor = regex.exec(href)) {\n        var rawAnchor = anchor[0] + this.getAnchorSuffix();\n\n        if ($(rawAnchor).length > 0) {\n          e.preventDefault();\n\n          if (typeof this.options.menu !== 'undefined' && link.parents().is(this.options.menu.menu)) {\n            extraDelay = this.options.menu.totalDuration();\n            this.options.menu.hide();\n          }\n\n          var finalDelay = this.options.delay + extraDelay;\n          var callback = !this.isLinkBlank(link) ? function () {\n            window.location.hash = anchor;\n          } : function () {};\n          Hawk.scrollToElement({\n            anchor: rawAnchor,\n            callback: callback,\n            delay: finalDelay,\n            offset: this.options.offset()\n          });\n        }\n      }\n    }\n  }, {\n    key: \"refresh\",\n    value: function refresh() {\n      $('a').unbind(this.getEventName(), this.movingAction).bind(this.getEventName(), this.movingAction.bind(this));\n      return this;\n    }\n  }, {\n    key: \"run\",\n    value: function run() {\n      var _this = this;\n\n      this.refresh();\n      var currentHash = Hawk.getPreparedHash();\n\n      if (currentHash.length > 0) {\n        var preparedAnchor = this.getAnchorOfHash(currentHash);\n\n        if ($(preparedAnchor).length > 0) {\n          setTimeout(function () {\n            _this.goTo(currentHash);\n          }, this.options.loadingDelay);\n        }\n      }\n    }\n  }]);\n\n  return _class2;\n}(); // Hawk.OldAnchorsManager = function(options) {\n//     var that = this;\n//     this.defaultOptions = {\n//         delay: 100,\n//         menu: undefined,\n//         offset: function() {\n//             return 0;\n//         }\n//     }\n//     this.options = Hawk.mergeObjects(this.defaultOptions, options);\n//     this.anchorsCallback = function(e) {\n//         var regex = /#{1}.+$/;\n//         var link = this;\n//         var href = $(this).attr('href');\n//         var anchor;\n//         var extraDelay = 0;\n//         if (anchor = regex.exec(href)) {\n//             if ($(anchor + Hawk.anchorSufix).length) {\n//                 e.preventDefault();\n//                 if (typeof that.options.menu !== 'undefined' && $(link).parents().is(that.options.menu.menu)) {\n//                     extraDelay = that.options.menu.totalDuration();\n//                     that.options.menu.hide();\n//                 }\n//                 var finalDelay = that.options.delay + extraDelay;\n//                 var callback = function() {\n//                 }\n//                 if (typeof $(link).attr('data-anchor-type') == 'undefined' || $(link).attr('data-anchor-type') != 'blank') {\n//                     callback = function() {\n//                         window.location.hash = anchor;\n//                     }\n//                 }\n//                 Hawk.scrollToElement({ anchor: anchor + Hawk.anchorSufix, callback: callback, delay: finalDelay, offset: that.options.offset() });\n//             }\n//         }\n//     };\n//     this.goTo = function(anchor) {\n//         Hawk.scrollToElement({ anchor: anchor + Hawk.anchorSufix, offset: that.options.offset() });\n//     }\n//     this.refresh = function() {\n//         $('a').unbind('click', this.anchorsCallback).click(this.anchorsCallback);\n//         return this;\n//     }\n//     this.run = function() {\n//         this.refresh();\n//     }\n// }\n\n\nHawk.DropdownConstants = {\n  Modes: {\n    PLAIN: 0,\n    CHOOSABLE: 1\n  },\n  Types: {\n    OVERLAYER: 0,\n    EXPANDING: 1\n  },\n  Directions: {\n    DOWNWARDS: 0,\n    UPWARDS: 1\n  }\n};\nHawk.RegisteredDropdowns = [];\n\nHawk.Dropdown = function (container, options) {\n  var that = this;\n  this.container = $(container).first();\n  this.header;\n  this.title;\n  this.list;\n  this.listContainer;\n  this.searchingField;\n  this.startEscapeSensor;\n  this.sensor;\n  this.endSensor;\n  this.escapeSensor;\n  this.fields;\n  this.disabled = false;\n  this.states = {\n    CLOSED: 0,\n    OPEN: 1\n  };\n  this.defaultOptions = {\n    slideSpeed: 200,\n    type: Hawk.DropdownConstants.Types.OVERLAYER,\n    direction: Hawk.DropdownConstants.Directions.DOWNWARDS,\n    containerClass: 'hawk-dropdown',\n    expandingTypeClass: 'hawk-dropdown--expanding',\n    upwardsDirectionClass: 'hawk-dropdown--upwards',\n    openClass: 'hawk-dropdown--open',\n    headerClass: 'hawk-dropdown__header',\n    titleClass: 'hawk-dropdown__title',\n    listClass: 'hawk-dropdown__list',\n    listContainerClass: 'hawk-dropdown__list-container',\n    searchingFieldClass: 'hawk-dropdown__searching-field',\n    disabledClass: 'disabled',\n    startEscapeSensorClass: 'hawk-dropdown__start-escape-sensor',\n    sensorClass: 'hawk-dropdown__sensor',\n    endSensorClass: 'hawk-dropdown__end-sensor',\n    escapeSensorClass: 'hawk-dropdown__escape-sensor',\n    onShow: function onShow(dropdown) {},\n    onShowing: function onShowing(dropdown) {},\n    onHide: function onHide(dropdown) {},\n    onHiding: function onHiding(dropdown) {},\n    onSelected: function onSelected(dropdown, field, silently) {\n      if (field.attr('type') == 'radio') {\n        var description = field.parent().find('.dropdown-item__description').html();\n        dropdown.title.html(description);\n        dropdown.hide();\n      }\n\n      return true;\n    },\n    onChanged: function onChanged(dropdown, field) {}\n  };\n  this.options = Hawk.mergeObjects(this.defaultOptions, options);\n  this.state = this.states.CLOSED;\n  this.mode = this.options.mode;\n  this.type = this.options.type;\n\n  this.isDisabled = function () {\n    return this.disabled;\n  };\n\n  this.disable = function () {\n    this.disabled = true;\n    this.container.addClass(this.options.disabledClass);\n    return this;\n  };\n\n  this.enable = function () {\n    this.disabled = false;\n    this.container.removeClass(this.options.disabledClass);\n    return this;\n  };\n\n  this.clearFields = function () {\n    this.fields.each(function () {\n      $(this).prop('checked', false);\n    });\n    return this;\n  };\n\n  this.setOpen = function () {\n    this.state = this.states.OPEN;\n    return this;\n  };\n\n  this.setClosed = function () {\n    this.state = this.states.CLOSED;\n    return this;\n  };\n\n  this.isOpen = function () {\n    return this.state == this.states.OPEN;\n  };\n\n  this.doesNeedScrollbar = function () {\n    return this.list.get(0).offsetHeight < this.list.get(0).scrollHeight;\n  };\n\n  this.show = function () {\n    var _this2 = this;\n\n    this.enableSearchingField();\n    this.container.addClass(that.options.openClass);\n    this.listContainer.velocity(\"slideDown\", {\n      duration: that.options.slideSpeed,\n      easing: \"linear\",\n      complete: function complete() {\n        if (_this2.doesNeedScrollbar()) {\n          _this2.list.mCustomScrollbar();\n        }\n\n        if (typeof that.options.onShow === 'function') {\n          that.options.onShow(that);\n        }\n      }\n    });\n\n    if (typeof that.options.onShowing === 'function') {\n      that.options.onShowing(that);\n    }\n\n    var _iterator = _createForOfIteratorHelper(Hawk.RegisteredDropdowns),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var dropdown = _step.value;\n\n        if (dropdown.isOpen() && dropdown != this) {\n          dropdown.hide();\n        }\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n\n    this.setOpen();\n    return this;\n  };\n\n  this.hide = function () {\n    this.clearSearchingField();\n    this.disableSearchingField();\n    this.container.removeClass(that.options.openClass);\n    this.listContainer.velocity(\"slideUp\", {\n      duration: that.options.slideSpeed,\n      easing: \"linear\",\n      complete: function complete() {\n        if (typeof that.options.onHide === 'function') {\n          that.options.onHide(that);\n        }\n      }\n    });\n\n    if (typeof that.options.onHiding === 'function') {\n      that.options.onHiding(that);\n    }\n\n    this.setClosed();\n    this.showAllItems();\n    return this;\n  };\n\n  this.select = function (field, silently) {\n    if (field.length > 0) {\n      return this.options.onSelected(this, field, silently);\n    } else {\n      return false;\n    }\n  };\n\n  this.selectByIndex = function (index, silently) {\n    var field = this.fields.eq(index);\n    return this.select(field, silently);\n  };\n\n  this.selectByValue = function (value, silently) {\n    var field = this.fields.filter(function () {\n      return $(this).val() == value;\n    });\n    return this.select(field, silently);\n  };\n\n  this.createSensor = function (className) {\n    var sensor = $('<input type=\"checkbox\" />');\n    sensor.addClass(className);\n    return sensor;\n  };\n\n  this.refreshDependencies = function () {\n    this.fields = this.list.find('input[type=\"radio\"], input[type=\"checkbox\"]');\n\n    if (this.fields.length > 0) {\n      this.fields.change(function () {\n        if (typeof that.options.onChanged == 'function') {\n          that.options.onChanged(that, $(this));\n        }\n\n        if (typeof that.options.onSelected == 'function') {\n          that.options.onSelected(that, $(this));\n        }\n      });\n    }\n\n    return this;\n  };\n\n  this.checkFields = function () {\n    var fields = this.fields.filter(\":checked\");\n\n    if (fields.length > 0) {\n      this.select(fields);\n    }\n  };\n\n  this.clearSearchingField = function () {\n    this.searchingField.val(\"\");\n    return this;\n  };\n\n  this.disableSearchingField = function () {\n    this.searchingField.attr('disabled', 'disabled');\n    return this;\n  };\n\n  this.isSearchingFieldDisabled = function () {\n    return this.searchingField.is(':disabled');\n  };\n\n  this.enableSearchingField = function () {\n    this.searchingField.removeAttr('disabled');\n    this.searchingField.focus();\n    return this;\n  };\n\n  this.showAllItems = function () {\n    this.list.children().css({\n      display: 'block'\n    });\n    return this;\n  };\n\n  this.searchingFieldExist = function () {\n    return this.searchingField.length > 0;\n  };\n\n  this.run = function () {\n    var that = this;\n    this.header = this.container.find('.' + this.options.headerClass);\n    this.title = this.container.find('.' + this.options.titleClass);\n    this.list = this.container.find('.' + this.options.listClass);\n    this.listContainer = this.container.find('.' + this.options.listContainerClass);\n    this.searchingField = this.container.find('.' + this.options.searchingFieldClass);\n    this.sensor = this.createSensor(this.options.sensorClass);\n    this.container.prepend(this.sensor);\n    this.startEscapeSensor = this.createSensor(this.options.startEscapeSensorClass);\n    this.container.prepend(this.startEscapeSensor); //.find('.' + this.options.startEscapeSensorClass);\n    ///.find('.' + this.options.sensorClass);\n\n    this.endSensor = this.createSensor(this.options.endSensorClass);\n    this.container.append(this.endSensor); //.find('.' + this.options.endSensorClass);\n\n    this.escapeSensor = this.createSensor(this.options.escapeSensorClass);\n    this.container.append(this.escapeSensor); //.find('.' + this.options.escapeSensorClass);\n\n    if (this.options.type === Hawk.DropdownConstants.Types.EXPANDING) {\n      this.container.addClass(this.options.expandingTypeClass);\n    }\n\n    if (this.options.direction === Hawk.DropdownConstants.Directions.UPWARDS) {\n      this.container.addClass(this.options.upwardsDirectionClass);\n    }\n\n    this.hide();\n    this.container.click(function (e) {\n      e.stopPropagation();\n    });\n    this.header.add(this.searchingField).click(function (e) {\n      e.preventDefault();\n      e.stopPropagation();\n\n      if (that.isOpen()) {\n        that.hide();\n      } else if (!that.isDisabled()) {\n        that.show();\n      }\n    });\n    this.startEscapeSensor.focus(function () {\n      if (that.isOpen()) {\n        that.hide();\n      }\n    });\n    this.sensor.focus(function () {\n      if (!that.isOpen() && !that.isDisabled()) {\n        that.show();\n      }\n    });\n    this.endSensor.focus(function () {\n      if (!that.isOpen() && !that.isDisabled()) {\n        that.show();\n      }\n    });\n    this.escapeSensor.focus(function () {\n      if (that.isOpen()) {\n        that.hide();\n      }\n    });\n\n    if (this.searchingFieldExist()) {\n      this.searchingField.keydown(function () {\n        var thisthis = $(this);\n        setTimeout(function () {\n          var value = thisthis.val().trim().toLowerCase();\n\n          if (value.length > 0 && !that.isSearchingFieldDisabled()) {\n            that.list.children().each(function () {\n              if ($(this).text().trim().toLowerCase().includes(value)) {\n                $(this).css({\n                  display: 'block'\n                });\n              } else {\n                $(this).css({\n                  display: 'none'\n                });\n              }\n            });\n          } else {\n            that.showAllItems();\n          }\n        }, 200);\n      });\n    } // this.sensor.blur(function() {\n    //     setTimeout(function() {\n    //         if (that.fields.filter(':focus').length === 0 && that.isOpen()) {\n    //             that.hide();\n    //         }\n    //     }, 100);\n    // });\n    //\n    // this.fields.blur(function() {\n    //     setTimeout(function() {\n    //         if (that.fields.add(that.sensor).filter(':focus').length === 0 && that.isOpen()) {\n    //             that.hide();\n    //         }\n    //     }, 100);\n    // });\n\n\n    $('body').click(function () {\n      if (that.isOpen()) {\n        that.hide();\n      }\n    });\n    this.refreshDependencies();\n    this.checkFields();\n    Hawk.RegisteredDropdowns.push(this);\n    return true;\n  };\n};\n\nHawk.LayeredSection = function (container, options) {\n  var that = this;\n  this.container = $(container).first();\n  this.buttons;\n  this.aboveLayers;\n  this.baseLayer;\n  this.baseLayerInner;\n  this.defaultOptions = {\n    containerClass: 'hawk-layered-section',\n    baseLayerClass: 'hawk-layered-section__base-layer',\n    baseLayerInnerClass: 'hawk-layered-section__base-layer-inner',\n    aboveLayerClass: 'hawk-layered-section__above-layer',\n    aboveLayerInnerClass: 'hawk-layered-section__above-layer-inner',\n    buttonClass: 'hawk-layered-section__button',\n    nameAttribute: 'data-name',\n    baseLayerName: 'base',\n    onAboveLayerShow: function onAboveLayerShow(layeredSection, aboveLayer) {}\n  };\n  this.options = Hawk.mergeObjects(this.defaultOptions, options);\n\n  this.hideBaseLayer = function () {\n    this.baseLayerInner.velocity({\n      opacity: 0\n    }, {\n      complete: function complete() {\n        that.baseLayer.css({\n          visibility: 'hidden'\n        });\n      }\n    });\n    return this;\n  };\n\n  this.showBaseLayer = function () {\n    this.hideLayers();\n    this.baseLayer.css({\n      visibility: 'visible'\n    });\n    this.baseLayerInner.velocity({\n      opacity: 1\n    }, {});\n    return this;\n  };\n\n  this.hideLayers = function (except) {\n    this.aboveLayers.not('[' + that.options.nameAttribute + '=\"' + except + '\"]').velocity(\"fadeOut\");\n    return this;\n  };\n\n  this.showLayer = function (name) {\n    this.hideBaseLayer();\n    this.hideLayers(name);\n    var currentLayer = that.aboveLayers.filter('[' + that.options.nameAttribute + '=\"' + name + '\"]');\n\n    if (currentLayer.length > 0) {\n      currentLayer.velocity(\"fadeIn\", {\n        complete: function complete() {\n          // currentLayer.find('.' + that.options.aboveLayerInnerClass).css({\n          //     opacity: 1\n          // });\n          that.options.onAboveLayerShow(that, currentLayer);\n        }\n      });\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  this.run = function () {\n    this.buttons = this.container.find('.' + this.options.buttonClass);\n    this.baseLayer = this.container.find('.' + this.options.baseLayerClass);\n    this.baseLayerInner = this.container.find('.' + this.options.baseLayerInnerClass);\n    this.aboveLayers = this.container.find('.' + this.options.aboveLayerClass);\n    this.buttons.click(function () {\n      var name = $(this).attr(that.options.nameAttribute);\n\n      if (name !== that.options.baseLayerName) {\n        that.showLayer(name);\n      } else {\n        that.showBaseLayer();\n      }\n    });\n    return this;\n  };\n};\n\nHawk.MoreContentManager = /*#__PURE__*/function () {\n  function _class3(id, options) {\n    _classCallCheck(this, _class3);\n\n    this.defaultOptions = {\n      buttonClass: \"hawk-more-content-button\",\n      buttonContentClass: \"hawk-more-content-button__content\",\n      contentClass: \"hawk-more-content\",\n      IDAttrName: \"data-id\",\n      managerIDAttrName: \"data-more-content-manager\",\n      buttonOppositeTextAttr: \"data-opposite-text\",\n      eventName: \"click.moreContent\",\n      actionShow: function actionShow(content) {\n        if (!content.is(\":visible\")) {\n          content.velocity(\"slideDown\");\n        }\n      },\n      actionHide: function actionHide(content) {\n        if (content.is(\":visible\")) {\n          content.velocity(\"slideUp\");\n        }\n      },\n      onShow: function onShow(mcm, button, content) {\n        mcm.toggleButtonText(button);\n      },\n      onHide: function onHide(mcm, button, content) {\n        mcm.toggleButtonText(button);\n      }\n    };\n    this.id = id;\n    this.options = Hawk.mergeObjects(this.defaultOptions, options);\n    this.buttons = null;\n    this.content = null;\n  }\n\n  _createClass(_class3, [{\n    key: \"getID\",\n    value: function getID() {\n      return this.id;\n    }\n  }, {\n    key: \"getButtons\",\n    value: function getButtons() {\n      return $('.' + this.options.buttonClass + '[' + this.options.managerIDAttrName + '=\"' + this.getID() + '\"]');\n    }\n  }, {\n    key: \"getButton\",\n    value: function getButton(id) {\n      return $('.' + this.options.buttonClass + '[' + this.options.managerIDAttrName + '=\"' + this.getID() + '\"]').filter('[' + this.options.IDAttrName + '=\"' + id + '\"]');\n    }\n  }, {\n    key: \"getContent\",\n    value: function getContent(id) {\n      return $('.' + this.options.contentClass + '[' + this.options.managerIDAttrName + '=\"' + this.getID() + '\"]').filter('[' + this.options.IDAttrName + '=\"' + id + '\"]');\n    }\n  }, {\n    key: \"isContentVisible\",\n    value: function isContentVisible(id) {\n      var content = this.getContent(id);\n      return content.is(':visible');\n    }\n  }, {\n    key: \"toggleButtonText\",\n    value: function toggleButtonText(button) {\n      var oppositeText = button.attr(this.options.buttonOppositeTextAttr);\n      var buttonContent = button.find('.' + this.options.buttonContentClass);\n      button.attr(this.options.buttonOppositeTextAttr, buttonContent.text());\n      buttonContent.text(oppositeText);\n    }\n  }, {\n    key: \"show\",\n    value: function show(id) {\n      this.button = this.getButton(id);\n      this.content = this.getContent(id);\n      this.options.actionShow(this.content);\n      this.options.onShow(this, this.button, this.content);\n    }\n  }, {\n    key: \"hide\",\n    value: function hide(id) {\n      this.button = this.getButton(id);\n      this.content = this.getContent(id);\n      this.options.actionHide(this.content);\n      this.options.onHide(this, this.button, this.content);\n    }\n  }, {\n    key: \"refreshDependencies\",\n    value: function refreshDependencies() {\n      if (this.buttons !== null) {\n        this.buttons.unbind(this.options.eventName);\n      }\n\n      var that = this;\n      this.buttons = this.getButtons();\n      this.buttons.bind(this.options.eventName, function () {\n        var id = $(this).attr(that.options.IDAttrName);\n\n        if (!that.isContentVisible(id)) {\n          that.show(id);\n        } else {\n          that.hide(id);\n        }\n      });\n    }\n  }, {\n    key: \"run\",\n    value: function run() {\n      this.refreshDependencies();\n    }\n  }]);\n\n  return _class3;\n}();\n\nHawk.SlidingLayerManager = /*#__PURE__*/function () {\n  function _class4(id, options) {\n    _classCallCheck(this, _class4);\n\n    this.defaultOptions = {\n      sectionClass: \"hawk-sliding-layer-section\",\n      layerClass: \"hawk-sliding-layer-section__layer\",\n      buttonClass: \"hawk-sliding-layer-section__button\",\n      activeClass: \"hawk-sliding-layer-section--active\",\n      managerIDAttrName: \"data-sliding-layer-manager\",\n      IDAttrName: \"data-id\",\n      eventName: \"click.slidingLayer\",\n      actionShow: function actionShow(slm, section, layer) {\n        section.addClass(slm.options.activeClass);\n      },\n      actionHide: function actionHide(slm, section, layer) {\n        section.removeClass(slm.options.activeClass);\n      },\n      onShow: function onShow(slm, button, layer) {},\n      onHide: function onHide(slm, button, layer) {}\n    };\n    this.id = id;\n    this.options = Hawk.mergeObjects(this.defaultOptions, options);\n    this.buttons = null;\n    this.button = null;\n    this.section = null;\n    this.layer = null;\n  }\n\n  _createClass(_class4, [{\n    key: \"getID\",\n    value: function getID() {\n      return this.id;\n    }\n  }, {\n    key: \"getButtons\",\n    value: function getButtons() {\n      return $('.' + this.options.buttonClass + '[' + this.options.managerIDAttrName + '=\"' + this.getID() + '\"]');\n    }\n  }, {\n    key: \"getButton\",\n    value: function getButton(id) {\n      return $('.' + this.options.buttonClass + '[' + this.options.managerIDAttrName + '=\"' + this.getID() + '\"]').filter('[' + this.options.IDAttrName + '=\"' + id + '\"]');\n    }\n  }, {\n    key: \"getSection\",\n    value: function getSection(id) {\n      return $('.' + this.options.sectionClass + '[' + this.options.managerIDAttrName + '=\"' + this.getID() + '\"]').filter('[' + this.options.IDAttrName + '=\"' + id + '\"]');\n    }\n  }, {\n    key: \"isLayerVisible\",\n    value: function isLayerVisible(id) {\n      var section = this.getSection(id);\n      return section.hasClass(this.options.activeClass);\n    }\n  }, {\n    key: \"show\",\n    value: function show(id) {\n      this.button = this.getButton(id);\n      this.section = this.getSection(id);\n      this.layer = this.section.find('.' + this.options.layerClass);\n      this.options.actionShow(this, this.section, this.layer);\n      var that = this;\n      setTimeout(function () {\n        that.options.onShow(that, that.button, that.layer);\n      }, 400);\n    }\n  }, {\n    key: \"hide\",\n    value: function hide(id) {\n      this.button = this.getButton(id);\n      this.section = this.getSection(id);\n      this.layer = this.section.find('.' + this.options.layerClass);\n      this.options.actionHide(this, this.section, this.layer);\n      this.options.onHide(this, this.button, this.layer);\n    }\n  }, {\n    key: \"refreshDependencies\",\n    value: function refreshDependencies() {\n      var that = this;\n\n      if (this.buttons !== null) {\n        this.buttons.unbind(this.options.eventName);\n      }\n\n      this.buttons = this.getButtons();\n      this.buttons.bind(this.options.eventName, function () {\n        var id = $(this).attr(that.options.IDAttrName);\n\n        if (!that.isLayerVisible(id)) {\n          that.show(id);\n        } else {\n          that.hide(id);\n        }\n      });\n    }\n  }, {\n    key: \"run\",\n    value: function run() {\n      this.refreshDependencies();\n    }\n  }]);\n\n  return _class4;\n}();\n\nHawk.SingleThreadClass = /*#__PURE__*/function () {\n  function _class5() {\n    _classCallCheck(this, _class5);\n\n    this.request = null;\n    this.requestWorking = false;\n  }\n\n  _createClass(_class5, [{\n    key: \"setRequest\",\n    value: function setRequest(request) {\n      this.request = request;\n      return this;\n    }\n  }, {\n    key: \"getRequest\",\n    value: function getRequest() {\n      return this.request;\n    }\n  }, {\n    key: \"abortRequest\",\n    value: function abortRequest() {\n      if (typeof this.request != 'undefined') {\n        this.request.abort();\n      }\n\n      return this;\n    }\n  }, {\n    key: \"clearRequest\",\n    value: function clearRequest() {\n      this.request = null;\n      return this;\n    }\n  }, {\n    key: \"isWorking\",\n    value: function isWorking() {\n      return this.requestWorking;\n    }\n  }, {\n    key: \"startWorking\",\n    value: function startWorking() {\n      this.requestWorking = true;\n    }\n  }, {\n    key: \"finishWorking\",\n    value: function finishWorking() {\n      this.requestWorking = false;\n    }\n  }]);\n\n  return _class5;\n}();\n\nHawk.Pager = /*#__PURE__*/function () {\n  function _class6(container, options) {\n    _classCallCheck(this, _class6);\n\n    this.defaultOptions = {\n      pagesVisibilityLimit: 8,\n      visiblePagesNumber: 5,\n      edgeVisiblePagesNumber: 4,\n      activeClass: \"active\",\n      pagesContainerClass: \"hawk-pager__pages\",\n      previousButtonClass: \"hawk-pager__previous\",\n      nextButtonClass: \"hawk-pager__next\",\n      pagerItemClass: \"pager-item\",\n      clickEventName: \"click.pager\",\n      pageNrAttr: \"data-page-nr\",\n      createItem: function createItem(nr) {\n        return $(\"<li class=\\\"std-pager__item\\\"><div class=\\\"pager-item\\\" data-page-nr=\\\"\" + nr + \"\\\">\" + nr + \"</div></li>\");\n      },\n      createSeparator: function createSeparator() {\n        return $(\"<li class=\\\"std-pager__separator\\\"><div class=\\\"pager-item-separator\\\">...</div></li>\");\n      },\n      onPageChanged: function onPageChanged(pager, nr, bySystem) {}\n    };\n    this.options = Hawk.mergeObjects(this.defaultOptions, options);\n    this.container = $(container);\n    this.pagesContainer;\n    this.controls = {};\n    this.pagesNumber = 1;\n    this.page = 1;\n    this.pages;\n  }\n\n  _createClass(_class6, [{\n    key: \"getPage\",\n    value: function getPage() {\n      return this.page;\n    }\n  }, {\n    key: \"setPage\",\n    value: function setPage(page) {\n      this.page = page;\n      return this;\n    }\n  }, {\n    key: \"updatePage\",\n    value: function updatePage(page, bySystem) {\n      if (typeof bySystem == 'undefined') {\n        bySystem = true;\n      }\n\n      this.setPage(page);\n      this.markAsActive(page);\n\n      if (this.shouldBeRebuilt(page)) {\n        this.rebuild();\n      } else {\n        this.checkDependencies();\n      }\n\n      if (typeof this.options.onPageChanged == 'function') {\n        this.options.onPageChanged(this, this.getPage(), bySystem);\n      }\n\n      return this;\n    }\n  }, {\n    key: \"getPagesNumber\",\n    value: function getPagesNumber() {\n      return this.pagesNumber;\n    }\n  }, {\n    key: \"setPagesNumber\",\n    value: function setPagesNumber(pagesNumber) {\n      this.pagesNumber = pagesNumber;\n      return this;\n    }\n  }, {\n    key: \"checkDependencies\",\n    value: function checkDependencies() {\n      if (this.isFirstPage()) {\n        this.controls.previous.css({\n          visibility: \"hidden\"\n        });\n      } else {\n        this.controls.previous.css({\n          visibility: \"visible\"\n        });\n      }\n\n      if (this.isLastPage()) {\n        this.controls.next.css({\n          visibility: \"hidden\"\n        });\n      } else {\n        this.controls.next.css({\n          visibility: \"visible\"\n        });\n      } // if (typeof this.options.onPageChanged == 'function') {\n      // \tthis.options.onPageChanged(this, this.getPage());\n      // }\n\n    }\n  }, {\n    key: \"previous\",\n    value: function previous(bySystem) {\n      return this.updatePage(this.getPage() - 1, bySystem);\n    }\n  }, {\n    key: \"next\",\n    value: function next(bySystem) {\n      return this.updatePage(this.getPage() + 1, bySystem);\n    }\n  }, {\n    key: \"create\",\n    value: function create(pagesNumber) {\n      var pages = $();\n      var page = this.getPage();\n\n      if (pagesNumber <= this.options.pagesVisibilityLimit) {\n        for (var i = 1; i <= pagesNumber; i++) {\n          pages = pages.add(this.options.createItem(i));\n        }\n      } else if (this.isOnEdge(page)) {\n        for (var _i = 1; _i <= this.options.edgeVisiblePagesNumber; _i++) {\n          pages = pages.add(this.options.createItem(_i));\n        }\n\n        pages = pages.add(this.options.createSeparator());\n\n        for (var _i2 = pagesNumber - this.options.edgeVisiblePagesNumber + 1; _i2 <= pagesNumber; _i2++) {\n          pages = pages.add(this.options.createItem(_i2));\n        }\n      } else {\n        pages = pages.add(this.options.createSeparator());\n        var previousBound = page - Math.floor(this.options.visiblePagesNumber / 2);\n        var rangeEnd = previousBound + this.options.visiblePagesNumber;\n\n        for (var _i3 = previousBound; _i3 < rangeEnd; _i3++) {\n          pages = pages.add(this.options.createItem(_i3));\n        }\n\n        pages = pages.add(this.options.createSeparator());\n      }\n\n      return pages;\n    }\n  }, {\n    key: \"isOnEdge\",\n    value: function isOnEdge(page) {\n      return page < this.options.edgeVisiblePagesNumber || page > this.getPagesNumber() - this.options.edgeVisiblePagesNumber + 1;\n    }\n  }, {\n    key: \"isFirstPage\",\n    value: function isFirstPage() {\n      return this.getPage() == 1;\n    }\n  }, {\n    key: \"isLastPage\",\n    value: function isLastPage() {\n      return this.getPage() == this.getPagesNumber();\n    }\n  }, {\n    key: \"isPageVisible\",\n    value: function isPageVisible(page) {\n      return this.pages.find(\"[\" + this.options.pageNrAttr + \"=\\\"\" + page + \"\\\"]\").length > 0;\n    }\n  }, {\n    key: \"shouldBeRebuilt\",\n    value: function shouldBeRebuilt(page) {\n      return !this.isPageVisible(page) || !this.isPageVisible(page - 1) || !this.isPageVisible(page + 1);\n    }\n  }, {\n    key: \"build\",\n    value: function build(pagesNumber) {\n      var _this3 = this;\n\n      this.setPagesNumber(pagesNumber);\n\n      if (typeof this.pages != 'undefined') {\n        this.pages.unbind(this.options.clickEventName);\n      }\n\n      this.pages = this.create(pagesNumber);\n      this.pagesContainer.html('');\n      this.pagesContainer.append(this.pages);\n      this.pages.find('.' + this.options.pagerItemClass).bind('click', function (e) {\n        e.preventDefault();\n        var jQueryThis = $(e.currentTarget);\n        var page = jQueryThis.attr(_this3.options.pageNrAttr);\n\n        _this3.updatePage(page, false);\n      });\n      this.checkDependencies();\n    }\n  }, {\n    key: \"rebuild\",\n    value: function rebuild() {\n      this.build(this.getPagesNumber());\n      this.markAsActive(this.getPage());\n    }\n  }, {\n    key: \"markAsActive\",\n    value: function markAsActive(nr) {\n      this.pages.find('.' + this.options.pagerItemClass).removeClass(this.options.activeClass);\n      this.pages.find('.' + this.options.pagerItemClass + \"[\" + this.options.pageNrAttr + \"=\\\"\" + nr + \"\\\"]\").addClass(this.options.activeClass);\n    }\n  }, {\n    key: \"run\",\n    value: function run(pagesNumber) {\n      var _this4 = this;\n\n      this.pagesContainer = this.container.find('.' + this.options.pagesContainerClass);\n      this.controls = {\n        previous: this.container.find('.' + this.options.previousButtonClass),\n        next: this.container.find('.' + this.options.nextButtonClass)\n      };\n      this.build(pagesNumber);\n      this.markAsActive(this.getPage());\n      this.controls.previous.click(function (e) {\n        _this4.previous(false);\n      });\n      this.controls.next.click(function (e) {\n        _this4.next(false);\n      });\n    }\n  }]);\n\n  return _class6;\n}();\n\nHawk.StepsManager = /*#__PURE__*/function () {\n  function _class7(container, options) {\n    _classCallCheck(this, _class7);\n\n    this.defaultOptions = {\n      stepClass: 'hawk-steps-manager__step',\n      activeClass: 'active'\n    };\n    this.container = $(container);\n    this.steps = null;\n    this.options = Hawk.mergeObjects(this.defaultOptions, options);\n  }\n\n  _createClass(_class7, [{\n    key: \"clearSteps\",\n    value: function clearSteps() {\n      this.steps.removeClass(this.options.activeClass);\n      return this;\n    }\n  }, {\n    key: \"markStepAsActive\",\n    value: function markStepAsActive(nr) {\n      this.clearSteps();\n\n      for (var i = 0; i < nr; i++) {\n        this.steps.eq(i).addClass(this.options.activeClass);\n      }\n    }\n  }, {\n    key: \"run\",\n    value: function run() {\n      this.steps = this.container.find('.' + this.options.stepClass);\n    }\n  }]);\n\n  return _class7;\n}();\n\nHawk.ItemsManagerConstants = {\n  Modes: {\n    CLICK: 0,\n    CHOICE: 1\n  }\n};\n\nHawk.ItemsManager = /*#__PURE__*/function (_Hawk$SingleThreadCla) {\n  _inherits(_class8, _Hawk$SingleThreadCla);\n\n  var _super = _createSuper(_class8);\n\n  function _class8(container, options) {\n    var _this5;\n\n    _classCallCheck(this, _class8);\n\n    _this5 = _super.call(this);\n    _this5.container = container;\n    _this5.defaultOptions = {\n      itemClass: 'hawk-items-manager__item',\n      bookmarkClass: 'hawk-items-manager__bookmark',\n      groupIdAttribute: 'data-id',\n      managerIdAttribute: 'data-manager-id',\n      mode: Hawk.ItemsManagerConstants.CLICK,\n      getGroupClassname: function getGroupClassname(id) {\n        return \"hawk-items-manager-group-\" + id;\n      },\n      actionShow: function actionShow(items, imCallback) {\n        $(items).removeClass('hawk-hidden');\n        $(items).addClass('hawk-shown');\n        imCallback();\n      },\n      actionHide: function actionHide(itemsToHide) {\n        itemsToHide.removeClass('hawk-shown');\n        itemsToHide.addClass('hawk-hidden');\n      },\n      onGroupSelected: function onGroupSelected(groupID) {}\n    };\n    _this5.options = Hawk.mergeObjects(_this5.defaultOptions, options);\n    _this5.managerID = _this5.container.attr(_this5.options.managerIdAttribute);\n    return _this5;\n  }\n\n  _createClass(_class8, [{\n    key: \"selectItems\",\n    value: function selectItems(items) {\n      var _this6 = this;\n\n      if (!this.isWorking()) {\n        this.startWorking();\n        this.hideItemsExcept(items);\n        this.options.actionShow(items, function () {\n          _this6.finishWorking();\n        });\n      }\n    }\n  }, {\n    key: \"hideItemsExcept\",\n    value: function hideItemsExcept(items) {\n      var itemsToHide = this.getItems().not(items);\n      this.options.actionHide(itemsToHide);\n    }\n  }, {\n    key: \"selectItemsByGroup\",\n    value: function selectItemsByGroup(groupID) {\n      var cssSelector = '.' + this.options.getGroupClassname(groupID);\n\n      if (this.hasManagerID()) {\n        cssSelector += '[' + this.options.managerIdAttribute + '=\"' + this.getManagerID() + '\"]';\n      }\n\n      var selectedItems = this.getItems().filter(cssSelector);\n      this.selectItems(selectedItems);\n      this.options.onGroupSelected(groupID);\n    }\n  }, {\n    key: \"changeBookmark\",\n    value: function changeBookmark(groupID) {\n      var field = this.bookmarks.find('input[value=\"' + groupID + '\"]');\n      console.log(\"Changing bookmark.......\");\n      console.log(field);\n      field.prop('checked', true);\n      field.trigger('change');\n    }\n  }, {\n    key: \"onButtonClick\",\n    value: function onButtonClick(button) {\n      this.selectItemsByGroup($(button).attr(this.options.groupIdAttribute));\n    }\n  }, {\n    key: \"onFieldSelected\",\n    value: function onFieldSelected(field) {\n      this.selectItemsByGroup(field.val());\n    }\n  }, {\n    key: \"getManagerID\",\n    value: function getManagerID() {\n      var managerID = this.container.attr(this.options.managerIdAttribute);\n\n      if (typeof managerID != 'undefined') {\n        return managerID;\n      } else {\n        return \"\";\n      }\n    }\n  }, {\n    key: \"hasManagerID\",\n    value: function hasManagerID() {\n      return this.getManagerID().length > 0;\n    }\n  }, {\n    key: \"getItems\",\n    value: function getItems() {\n      var cssSelector = '.' + this.options.itemClass;\n\n      if (this.hasManagerID()) {\n        cssSelector += '[' + this.options.managerIdAttribute + '=\"' + this.getManagerID() + '\"]';\n      }\n\n      console.log(cssSelector);\n      console.log(this.container.find(cssSelector));\n      return this.container.find(cssSelector);\n    }\n  }, {\n    key: \"getBookmarks\",\n    value: function getBookmarks() {\n      var cssSelector = '.' + this.options.bookmarkClass;\n\n      if (this.hasManagerID()) {\n        cssSelector += '[' + this.options.managerIdAttribute + '=\"' + this.getManagerID() + '\"]';\n      }\n\n      return this.container.find(cssSelector);\n    }\n  }, {\n    key: \"run\",\n    value: function run() {\n      var _this7 = this;\n\n      this.items = this.getItems();\n      this.bookmarks = this.getBookmarks();\n\n      if (this.options.mode == Hawk.ItemsManagerConstants.Modes.CHOICE) {\n        this.bookmarks.find('input').change(function (e) {\n          _this7.onFieldSelected($(e.currentTarget));\n        });\n      } else {\n        this.bookmarks.click(function (e) {\n          e.stopPropagation();\n\n          _this7.onButtonClick($(e.currentTarget));\n        });\n      }\n    }\n  }]);\n\n  return _class8;\n}(Hawk.SingleThreadClass);\n\nHawk.AjaxLoadingItemsManager = /*#__PURE__*/function (_Hawk$SingleThreadCla2) {\n  _inherits(_class9, _Hawk$SingleThreadCla2);\n\n  var _super2 = _createSuper(_class9);\n\n  function _class9(container, options) {\n    var _this8;\n\n    _classCallCheck(this, _class9);\n\n    _this8 = _super2.call(this);\n    _this8.container = $(container);\n    _this8.offset = 0;\n    _this8.done = false;\n    _this8.filters = {};\n    _this8.orderBy = \"\";\n    _this8.lang = \"\";\n    _this8.buttons;\n    _this8.contentContainer;\n    _this8.loadingLayer;\n    _this8.noItemsContainer;\n    _this8.defaultOptions = {\n      itemsPerLoading: 6,\n      path: \"ajax/load-items\",\n      itemClass: \"ajax-loading-items-manager__item\",\n      buttonClass: \"ajax-loading-items-manager__button\",\n      contentContainerClass: \"ajax-loading-items-manager__content-container\",\n      loadingLayerClass: \"ajax-loading-items-manager__loading-layer\",\n      noItemsContainerClass: \"ajax-loading-items-manager__no-items\",\n      slideSpeed: 400,\n      fadeSpeed: 400,\n      appendItems: function appendItems(contentContainer, items) {\n        contentContainer.append(items);\n      },\n      onLoad: function onLoad(buttons, contentContainer, result) {},\n      onDone: function onDone(buttons, contentContainer, result) {\n        buttons.velocity({\n          opacity: 0\n        }, {\n          complete: function complete() {\n            buttons.css({\n              visibility: \"hidden\"\n            });\n          }\n        });\n      },\n      onError: function onError(buttons, contentContainer) {}\n    };\n    _this8.options = Hawk.mergeObjects(_this8.defaultOptions, options);\n    return _this8;\n  }\n\n  _createClass(_class9, [{\n    key: \"isDone\",\n    value: function isDone() {\n      return this.done;\n    }\n  }, {\n    key: \"getOffset\",\n    value: function getOffset() {\n      return this.offset;\n    }\n  }, {\n    key: \"setOffset\",\n    value: function setOffset(offset) {\n      this.offset = offset;\n      return this;\n    }\n  }, {\n    key: \"getFilters\",\n    value: function getFilters() {\n      return this.filters;\n    }\n  }, {\n    key: \"setFilters\",\n    value: function setFilters(filters) {\n      this.filters = filters;\n      return this;\n    }\n  }, {\n    key: \"getOrderBy\",\n    value: function getOrderBy() {\n      return this.orderBy;\n    }\n  }, {\n    key: \"setOrderBy\",\n    value: function setOrderBy(orderBy) {\n      this.orderBy = orderBy;\n      return this;\n    }\n  }, {\n    key: \"getLang\",\n    value: function getLang() {\n      return this.lang;\n    }\n  }, {\n    key: \"setLang\",\n    value: function setLang(lang) {\n      this.lang = lang;\n      return this;\n    }\n  }, {\n    key: \"load\",\n    value: function load(offset) {\n      var _this9 = this;\n\n      if (!this.isWorking()) {\n        this.startWorking();\n        this.loadingLayer.css({\n          display: 'flex'\n        });\n        this.setRequest($.ajax({\n          type: \"POST\",\n          url: this.options.path,\n          dataType: \"json\",\n          data: {\n            offset: offset,\n            itemsPerLoading: this.options.itemsPerLoading,\n            filters: this.getFilters(),\n            orderBy: this.getOrderBy(),\n            lang: this.getLang()\n          },\n          success: function success(result) {\n            console.log(result);\n\n            _this9.appendContent(result.html, result);\n\n            _this9.offset = result.offset;\n            _this9.done = result.isDone;\n\n            if (_this9.isDone()) {\n              _this9.options.onDone(_this9.buttons, _this9.contentContainer, result);\n            }\n\n            if (result.offset == 0 && result.isDone) {\n              _this9.showNoItemsInfo();\n            } else {\n              _this9.hideNoItemsInfo();\n            }\n          },\n          error: function error(jqXHR, textStatus, errorThrown) {\n            // here should appear error layer\n            //alert(errorThrown);\n            console.log(jqXHR.responseText);\n          },\n          complete: function complete() {\n            _this9.finishWorking();\n\n            _this9.loadingLayer.css({\n              display: 'none'\n            });\n          }\n        }));\n      }\n    }\n  }, {\n    key: \"reload\",\n    value: function reload() {\n      this.load(this.getOffset());\n    }\n  }, {\n    key: \"showNoItemsInfo\",\n    value: function showNoItemsInfo() {\n      if (!this.noItemsContainer.is(\":visible\")) {\n        this.noItemsContainer.velocity(\"slideDown\");\n      }\n    }\n  }, {\n    key: \"hideNoItemsInfo\",\n    value: function hideNoItemsInfo() {\n      if (this.noItemsContainer.is(\":visible\")) {\n        this.noItemsContainer.velocity(\"slideUp\");\n      }\n    }\n  }, {\n    key: \"appendContent\",\n    value: function appendContent(rawItems, result) {\n      var _this10 = this;\n\n      var items = Hawk.jQueryFromString(rawItems);\n      items.css({\n        opacity: 0\n      });\n      this.options.appendItems(this.contentContainer, items);\n\n      if (items.length > 0) {\n        items.velocity(\"slideDown\", {\n          duration: this.options.slideSpeed,\n          complete: function complete() {\n            items.velocity({\n              opacity: 1\n            }, {\n              duration: _this10.options.fadeSpeed\n            });\n\n            _this10.options.onLoad(_this10.buttons, _this10.contentContainer, result);\n          }\n        });\n      } else {\n        this.options.onLoad(this.buttons, this.contentContainer, result);\n      }\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this.contentContainer.children().velocity(\"slideUp\", {\n        complete: function complete(elements) {\n          $(elements).remove();\n        }\n      });\n      this.buttons.css({\n        visibility: 'visible'\n      }).velocity({\n        opacity: 1\n      });\n      this.offset = 0;\n      this.done = false;\n    }\n  }, {\n    key: \"run\",\n    value: function run() {\n      var _this11 = this;\n\n      this.buttons = this.container.find('.' + this.options.buttonClass);\n      this.contentContainer = this.container.find('.' + this.options.contentContainerClass);\n      this.loadingLayer = this.container.find('.' + this.options.loadingLayerClass);\n      this.noItemsContainer = this.container.find('.' + this.options.noItemsContainerClass);\n      this.buttons.click(function () {\n        if (!_this11.isDone()) {\n          _this11.load(_this11.offset);\n        }\n      });\n    }\n  }]);\n\n  return _class9;\n}(Hawk.SingleThreadClass);\n\nHawk.AjaxItemsManager = /*#__PURE__*/function (_Hawk$SingleThreadCla3) {\n  _inherits(_class10, _Hawk$SingleThreadCla3);\n\n  var _super3 = _createSuper(_class10);\n\n  function _class10(container, options) {\n    var _this12;\n\n    _classCallCheck(this, _class10);\n\n    _this12 = _super3.call(this);\n    _this12.container = $(container);\n    _this12.contentContainer;\n    _this12.noResultsContainer;\n    _this12.loadingLayer;\n    _this12.page = 1;\n    _this12.allItemsAmount = 0;\n    _this12.filters = {};\n    _this12.categories = [];\n    _this12.orderBy = \"\";\n    _this12.lang = \"\";\n    _this12.pagers = [];\n    _this12.defaultOptions = {\n      path: \"ajax/load-page\",\n      itemsPerPage: 12,\n      itemClass: \"ajax-items-manager__item\",\n      contentContainerClass: \"ajax-items-manager__content-container\",\n      loadingLayerClass: \"ajax-items-manager__loading-layer\",\n      filterLabelClass: \"ajax-items-manager__filter\",\n      noResultsClass: 'ajax-items-manager__no-results',\n      slideSpeed: 400,\n      fadeSpeed: 400,\n      updateContent: function updateContent(contentContainer, items) {\n        contentContainer.html(items);\n      },\n      createFilterLabel: function createFilterLabel(type, value, description) {\n        var label = $(\"<div class=\\\"\" + _this12.options.filterLabelClass + \"\\\"></div>\");\n        label.attr('data-type', type);\n        label.attr('data-id-', value);\n        label.text(description);\n        return label;\n      },\n      onLoad: function onLoad(result, contentContainer, firstLoading) {},\n      onLoading: function onLoading(contentContainer, firstLoading) {},\n      onError: function onError(contentContainer) {}\n    };\n    _this12.options = Hawk.mergeObjects(_this12.defaultOptions, options);\n    return _this12;\n  }\n\n  _createClass(_class10, [{\n    key: \"filterExists\",\n    value: function filterExists(type, value) {\n      if (typeof this.filters[type] != 'undefined') {\n        console.log(this.filters[type]);\n\n        var _iterator2 = _createForOfIteratorHelper(this.filters[type]),\n            _step2;\n\n        try {\n          for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n            var filter = _step2.value;\n            console.log(filter);\n\n            if (filter == value) {\n              return true;\n            }\n          }\n        } catch (err) {\n          _iterator2.e(err);\n        } finally {\n          _iterator2.f();\n        }\n\n        return false;\n      } else {\n        return false;\n      }\n    }\n  }, {\n    key: \"getFilters\",\n    value: function getFilters() {\n      return this.filters;\n    }\n  }, {\n    key: \"addFilter\",\n    value: function addFilter(type, value) {\n      if (typeof this.filters[type] == 'undefined') {\n        this.filters[type] = [];\n      }\n\n      this.filters[type].push(value);\n    }\n  }, {\n    key: \"removeAllFiltersOfType\",\n    value: function removeAllFiltersOfType(type) {\n      if (typeof this.filters[type] != 'undefined') {\n        //delete this.filters[type];\n        var currentFilter = this.filters[type];\n\n        for (var i in currentFilter) {\n          this.removeFilterLabel(type, currentFilter[i]);\n        }\n\n        this.filters[type] = [];\n      }\n    }\n  }, {\n    key: \"removeFilter\",\n    value: function removeFilter(type, value) {\n      if (typeof this.filters[type] != 'undefined') {\n        //delete this.filters[type];\n        var currentFilter = this.filters[type];\n\n        for (var i in currentFilter) {\n          if (currentFilter[i] == value) {\n            currentFilter.splice(i, 1);\n            this.removeFilterLabel(type, value);\n            return;\n          }\n        }\n      }\n    }\n  }, {\n    key: \"createFilterLabel\",\n    value: function createFilterLabel(type, value, description) {\n      return this.options.createFilterLabel(type, value, description);\n    }\n  }, {\n    key: \"removeFilterLabel\",\n    value: function removeFilterLabel(type, value) {\n      this.container.find('.' + this.options.filterLabelClass).filter(function () {\n        return $(this).attr('data-type') == type;\n      }).filter(function () {\n        return $(this).attr('data-id') == value;\n      }).remove();\n    }\n  }, {\n    key: \"getLang\",\n    value: function getLang() {\n      return this.lang;\n    }\n  }, {\n    key: \"setLang\",\n    value: function setLang(lang) {\n      this.lang = lang;\n      return this;\n    }\n  }, {\n    key: \"getOrderBy\",\n    value: function getOrderBy() {\n      return this.orderBy;\n    }\n  }, {\n    key: \"setOrderBy\",\n    value: function setOrderBy(orderBy) {\n      this.orderBy = orderBy;\n      return this;\n    }\n  }, {\n    key: \"setPage\",\n    value: function setPage(page) {\n      this.page = page;\n      return this;\n    }\n  }, {\n    key: \"getPage\",\n    value: function getPage() {\n      return this.page;\n    }\n  }, {\n    key: \"setAllItemsAmount\",\n    value: function setAllItemsAmount(allItemsAmount) {\n      this.allItemsAmount = allItemsAmount;\n      return this;\n    }\n  }, {\n    key: \"getAllItemsAmount\",\n    value: function getAllItemsAmount() {\n      return this.allItemsAmount;\n    }\n  }, {\n    key: \"getPagesNumber\",\n    value: function getPagesNumber() {\n      return Math.ceil(this.allItemsAmount / this.options.itemsPerPage);\n    }\n  }, {\n    key: \"addPager\",\n    value: function addPager(pager) {\n      this.pagers.push(pager);\n      return this;\n    }\n  }, {\n    key: \"doPagersAction\",\n    value: function doPagersAction(action) {\n      var _iterator3 = _createForOfIteratorHelper(this.pagers),\n          _step3;\n\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var pager = _step3.value;\n          action(pager);\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n    }\n  }, {\n    key: \"refreshPagers\",\n    value: function refreshPagers() {\n      var _this13 = this;\n\n      this.doPagersAction(function (pager) {\n        pager.setPagesNumber(_this13.getPagesNumber());\n        pager.updatePage(_this13.getPage());\n      });\n    }\n  }, {\n    key: \"updateContent\",\n    value: function updateContent(content) {\n      this.options.updateContent(this.contentContainer, content);\n    }\n  }, {\n    key: \"load\",\n    value: function load(page, firstLoading) {\n      var _this14 = this;\n\n      this.setPage(page);\n\n      if (typeof firstLoading == 'undefined') {\n        firstLoading = false;\n      }\n\n      if (!this.isWorking()) {\n        this.startWorking();\n        this.loadingLayer.css({\n          display: 'flex'\n        }); //this.updateContent(\"\");\n\n        this.options.onLoading(this.contentContainer, firstLoading);\n        this.setRequest($.ajax({\n          type: \"POST\",\n          url: this.options.path,\n          dataType: \"json\",\n          data: {\n            'page': this.page,\n            'itemsPerPage': this.options.itemsPerPage,\n            'filters': this.getFilters(),\n            'orderBy': this.orderBy,\n            'lang': this.getLang()\n          },\n          success: function success(result) {\n            console.log(result);\n\n            if (result.status == Hawk.RequestStatus.SUCCESS) {\n              if (result.allItemsAmount > 0) {\n                _this14.noResultsContainer.css({\n                  display: 'none'\n                });\n              } else {\n                _this14.noResultsContainer.css({\n                  display: 'block'\n                });\n              }\n\n              _this14.updateContent(result.html);\n\n              _this14.setAllItemsAmount(result.allItemsAmount);\n\n              _this14.setPage(result.page);\n\n              _this14.refreshPagers(); //this.makePageActive(this.getPage());\n\n\n              _this14.updateContent(result.html);\n            }\n\n            _this14.options.onLoad(result, _this14.contentContainer, firstLoading);\n          },\n          error: function error(jqXHR, textStatus, errorThrown) {\n            console.warn(jqXHR.responseText);\n          },\n          complete: function complete() {\n            _this14.finishWorking();\n\n            _this14.loadingLayer.css({\n              display: 'none'\n            });\n          }\n        }));\n      }\n    }\n  }, {\n    key: \"reload\",\n    value: function reload() {\n      this.load(this.getPage());\n    }\n  }, {\n    key: \"run\",\n    value: function run(page) {\n      if (typeof page == 'undefined') {\n        page = 1;\n      }\n\n      this.contentContainer = this.container.find('.' + this.options.contentContainerClass);\n      this.noResultsContainer = this.container.find('.' + this.options.noResultsClass);\n      this.loadingLayer = this.container.find('.' + this.options.loadingLayerClass);\n      this.load(page, true);\n    }\n  }]);\n\n  return _class10;\n}(Hawk.SingleThreadClass);\n\nHawk.FormField = /*#__PURE__*/function () {\n  function _class11(name, options) {\n    _classCallCheck(this, _class11);\n\n    this.name = name;\n    this.field = null;\n    this.wrapper = null;\n    this.defaultOptions = this.getDefaultOptions();\n    this.options = Hawk.mergeObjects(this.defaultOptions, options);\n  }\n\n  _createClass(_class11, [{\n    key: \"getDefaultOptions\",\n    value: function getDefaultOptions() {\n      return {\n        obtainWrapper: function obtainWrapper(field) {\n          return field.parents('.form-field');\n        },\n        required: true,\n        validate: function validate(field) {\n          return true;\n        },\n        errorClass: \"error\"\n      };\n    }\n  }, {\n    key: \"getField\",\n    value: function getField() {\n      return this.field;\n    }\n  }, {\n    key: \"getName\",\n    value: function getName() {\n      return this.name;\n    }\n  }, {\n    key: \"getWrapper\",\n    value: function getWrapper() {\n      return this.wrapper;\n    }\n  }, {\n    key: \"getValue\",\n    value: function getValue() {\n      throw new Error(\"This method should be overwritten in the subclass.\");\n    }\n  }, {\n    key: \"validate\",\n    value: function validate() {\n      throw new Error(\"This method should be overwritten in the subclass.\");\n    }\n  }, {\n    key: \"clearValue\",\n    value: function clearValue() {\n      throw new Error(\"This method should be overwritten in the subclass.\");\n    }\n  }, {\n    key: \"bind\",\n    value: function bind(form) {\n      this.field = $(form).find('input[name=\"' + this.getName() + '\"], input[name=\"' + this.getName() + '[]\"]');\n      this.wrapper = this.options.obtainWrapper(this.field);\n      return this.isBinded();\n    }\n  }, {\n    key: \"initializeObserving\",\n    value: function initializeObserving() {\n      throw new Error(\"This method should be overwritten in the subclass.\");\n    }\n  }, {\n    key: \"checkField\",\n    value: function checkField() {\n      if (this.validate()) {\n        this.clear();\n      } else {\n        this.markAsIncorrect();\n      }\n    }\n  }, {\n    key: \"isBinded\",\n    value: function isBinded() {\n      return this.wrapper !== null && this.field !== null;\n    }\n  }, {\n    key: \"disable\",\n    value: function disable() {\n      if (this.isBinded()) {\n        this.field.attr('disabled', 'disabled');\n      }\n\n      return this;\n    }\n  }, {\n    key: \"markAsIncorrect\",\n    value: function markAsIncorrect() {\n      this.wrapper.addClass(this.options.errorClass);\n      return this;\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this.wrapper.removeClass(this.options.errorClass);\n      return this;\n    }\n  }, {\n    key: \"run\",\n    value: function run(form) {\n      this.bind(form);\n      this.initializeObserving();\n    }\n  }]);\n\n  return _class11;\n}();\n\nHawk.FileFormField = /*#__PURE__*/function (_Hawk$FormField) {\n  _inherits(_class12, _Hawk$FormField);\n\n  var _super4 = _createSuper(_class12);\n\n  function _class12(name, allowedTypes, options) {\n    var _thisSuper, _this15;\n\n    _classCallCheck(this, _class12);\n\n    _this15 = _super4.call(this, name, options);\n    _this15.defaultOptions = Hawk.mergeWholeObjects(_get((_thisSuper = _assertThisInitialized(_this15), _getPrototypeOf(_class12.prototype)), \"getDefaultOptions\", _thisSuper).call(_thisSuper), {\n      onFileSelect: function onFileSelect(name, wrapper, fileExists) {},\n      pathFieldClass: 'file-form-field__path',\n      maxNamePreviewLength: 64\n    }); //console.log(this.defaultOptions);\n\n    _this15.options = Hawk.mergeObjects(_this15.defaultOptions, options);\n    _this15.allowedTypes = allowedTypes;\n    return _this15;\n  }\n\n  _createClass(_class12, [{\n    key: \"getValue\",\n    value: function getValue() {\n      return this.field.val();\n    }\n  }, {\n    key: \"getAllowedTypes\",\n    value: function getAllowedTypes() {\n      return this.allowedTypes;\n    }\n  }, {\n    key: \"validate\",\n    value: function validate() {\n      var val;\n      var field = this.getField();\n      var wrapper = this.getWrapper();\n      var rawField = field.get(0);\n      var id = parseInt(field.attr('data-id'));\n      var pathContainer = wrapper.find('.' + this.options.pathFieldClass);\n\n      if (field.val().length > 0) {\n        val = field.val();\n      } else {\n        val = field.attr('placeholder');\n        wrapper.removeClass('filled');\n        pathContainer.html('');\n        this.options.onFileSelect(field.name, wrapper, false);\n        return false;\n      }\n\n      val = val.replace('fakepath\\\\', '');\n\n      if (val.length > this.options.maxNamePreviewLength) {\n        val = val.slice(-this.options.maxNamePreviewLength);\n        val = \"...\" + val;\n      }\n\n      wrapper.addClass('filled');\n      pathContainer.text(val);\n      wrapper.removeClass('error');\n\n      if (field.val().length > 0) {\n        var fileType = field.get(0).files[0].type.valueOf(); // if (typeof callback == 'function') {\n        //     callback(field.name, id);\n        // }\n\n        var parent = field.parent();\n        var removeField = parent.find('[name=\"' + name + '-remove\"]');\n\n        if (removeField.length > 0) {\n          removeField.val(0);\n        }\n\n        if (Hawk.isInObject(fileType, this.getAllowedTypes())) {\n          wrapper.removeClass('error');\n          this.options.onFileSelect(field.name, wrapper, true);\n          return true;\n        } else {\n          wrapper.addClass('error');\n          this.options.onFileSelect(field.name, wrapper, true);\n          return false;\n        }\n      } else {\n        rawField.value = '';\n\n        if (!/safari/i.test(navigator.userAgent)) {\n          rawField.type = '';\n          rawField.type = 'file';\n        }\n\n        this.options.onFileSelect(field.name, wrapper, false);\n        return false;\n      }\n    }\n  }, {\n    key: \"initializeObserving\",\n    value: function initializeObserving() {\n      var _this16 = this;\n\n      this.field.change(function () {\n        setTimeout(function () {\n          _this16.checkField();\n        }, 10);\n      });\n    }\n  }]);\n\n  return _class12;\n}(Hawk.FormField);\n\nHawk.TextFormField = /*#__PURE__*/function (_Hawk$FormField2) {\n  _inherits(_class13, _Hawk$FormField2);\n\n  var _super5 = _createSuper(_class13);\n\n  function _class13(name, options) {\n    var _this17;\n\n    _classCallCheck(this, _class13);\n\n    _this17 = _super5.call(this, name, options);\n    _this17.timeout = null;\n    return _this17;\n  }\n\n  _createClass(_class13, [{\n    key: \"getValue\",\n    value: function getValue() {\n      return this.field.val();\n    }\n  }, {\n    key: \"validate\",\n    value: function validate() {\n      return this.options.validate(this.getValue());\n    }\n  }, {\n    key: \"clearValue\",\n    value: function clearValue() {\n      this.field.val('');\n      return this;\n    }\n  }, {\n    key: \"initializeObserving\",\n    value: function initializeObserving() {\n      var _this18 = this;\n\n      this.field.keydown(function () {\n        if (_this18.timeout != null) {\n          clearTimeout(_this18.timeout);\n        }\n\n        _this18.timeout = setTimeout(function () {\n          _this18.checkField();\n\n          _this18.timeout = null;\n        }, 500);\n      });\n      this.field.change(function () {\n        _this18.checkField();\n      });\n    }\n  }]);\n\n  return _class13;\n}(Hawk.FormField);\n\nHawk.ChoiceFormField = /*#__PURE__*/function (_Hawk$FormField3) {\n  _inherits(_class14, _Hawk$FormField3);\n\n  var _super6 = _createSuper(_class14);\n\n  function _class14(name, options) {\n    _classCallCheck(this, _class14);\n\n    return _super6.call(this, name, options);\n  }\n\n  _createClass(_class14, [{\n    key: \"getValue\",\n    value: function getValue() {\n      return this.field.val();\n    }\n  }, {\n    key: \"validate\",\n    value: function validate() {\n      return this.options.validate(this.getField());\n    }\n  }, {\n    key: \"initializeObserving\",\n    value: function initializeObserving() {\n      var _this19 = this;\n\n      this.field.change(function () {\n        _this19.checkField();\n      });\n    }\n  }]);\n\n  return _class14;\n}(Hawk.FormField);\n\nHawk.TextareaFormField = /*#__PURE__*/function (_Hawk$TextFormField) {\n  _inherits(_class15, _Hawk$TextFormField);\n\n  var _super7 = _createSuper(_class15);\n\n  function _class15() {\n    _classCallCheck(this, _class15);\n\n    return _super7.apply(this, arguments);\n  }\n\n  _createClass(_class15, [{\n    key: \"bind\",\n    value: function bind(form) {\n      this.field = $(form).find('textarea[name=\"' + this.getName() + '\"]');\n      this.wrapper = this.options.obtainWrapper(this.field);\n      return this.isBinded();\n    }\n  }]);\n\n  return _class15;\n}(Hawk.TextFormField);\n\nHawk.FormMultifield = /*#__PURE__*/function () {\n  function _class16(name, options) {\n    _classCallCheck(this, _class16);\n\n    this.name = name;\n    this.fields = [];\n    this.defaultOptions = {\n      obtainWrapper: function obtainWrapper(field) {\n        return field.parents('.form-field');\n      },\n      required: true,\n      validate: function validate(field) {\n        return true;\n      },\n      errorClass: \"error\"\n    };\n    this.options = Hawk.mergeObjects(this.defaultOptions, options);\n  }\n\n  _createClass(_class16, [{\n    key: \"getFields\",\n    value: function getFields() {\n      return this.fields;\n    }\n  }, {\n    key: \"getName\",\n    value: function getName() {\n      return this.name;\n    }\n  }, {\n    key: \"clearValue\",\n    value: function clearValue() {\n      var _iterator4 = _createForOfIteratorHelper(this.fields),\n          _step4;\n\n      try {\n        for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n          var field = _step4.value;\n          field.clearValue();\n        }\n      } catch (err) {\n        _iterator4.e(err);\n      } finally {\n        _iterator4.f();\n      }\n    }\n  }, {\n    key: \"refreshFields\",\n    value: function refreshFields(container) {\n      throw new Error(\"This method should be overwritten in the subclass.\");\n    }\n  }, {\n    key: \"checkFields\",\n    value: function checkFields(errorIDs) {\n      var _iterator5 = _createForOfIteratorHelper(this.fields),\n          _step5;\n\n      try {\n        for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n          var field = _step5.value;\n          var fieldID = parseInt(field.field.attr('data-field-id'));\n          var subfieldID = parseInt(field.field.attr('data-subfield-id'));\n          console.log(\"name: \" + field.getName());\n          console.log(\"fieldID: \" + fieldID);\n          console.log(\"subfieldID: \" + subfieldID);\n\n          if (fieldID > -1 && subfieldID > -1) {\n            if (errorIDs.hasOwnProperty(fieldID) && errorIDs[fieldID].indexOf(subfieldID) > -1) {\n              field.markAsIncorrect();\n            } else {\n              field.clear();\n            }\n          } else {\n            if (errorIDs.indexOf(fieldID) > -1) {\n              field.markAsIncorrect();\n            } else {\n              field.clear();\n            }\n          }\n        }\n      } catch (err) {\n        _iterator5.e(err);\n      } finally {\n        _iterator5.f();\n      }\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      var _iterator6 = _createForOfIteratorHelper(this.fields),\n          _step6;\n\n      try {\n        for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n          var field = _step6.value;\n          field.clear();\n        }\n      } catch (err) {\n        _iterator6.e(err);\n      } finally {\n        _iterator6.f();\n      }\n    }\n  }, {\n    key: \"disable\",\n    value: function disable() {\n      var _iterator7 = _createForOfIteratorHelper(this.fields),\n          _step7;\n\n      try {\n        for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n          var field = _step7.value;\n          field.disable();\n        }\n      } catch (err) {\n        _iterator7.e(err);\n      } finally {\n        _iterator7.f();\n      }\n\n      return this;\n    }\n  }]);\n\n  return _class16;\n}();\n\nHawk.TextFormMultifield = /*#__PURE__*/function (_Hawk$FormMultifield) {\n  _inherits(_class17, _Hawk$FormMultifield);\n\n  var _super8 = _createSuper(_class17);\n\n  function _class17() {\n    _classCallCheck(this, _class17);\n\n    return _super8.apply(this, arguments);\n  }\n\n  _createClass(_class17, [{\n    key: \"refreshFields\",\n    value: function refreshFields(formSender) {\n      var rawFields = formSender.form.find('input[data-field-name=\"' + this.getName() + '\"]');\n      this.fields = [];\n      var that = this;\n      rawFields.each(function () {\n        var fieldRawName = that.getName() + \"[\" + $(this).attr('data-field-id') + \"]\";\n        var dataSubfieldID = $(this).attr('data-subfield-id');\n\n        if (typeof dataSubfieldID != 'undefined' && dataSubfieldID.length > 0) {\n          fieldRawName += '[' + dataSubfieldID + ']';\n        }\n\n        var formField = new Hawk.TextFormField(fieldRawName, that.options);\n        formField.run(formSender.form);\n        that.fields.push(formField);\n      });\n    }\n  }]);\n\n  return _class17;\n}(Hawk.FormMultifield);\n\nHawk.FormSender = /*#__PURE__*/function (_Hawk$SingleThreadCla4) {\n  _inherits(_class18, _Hawk$SingleThreadCla4);\n\n  var _super9 = _createSuper(_class18);\n\n  function _class18(form, fields, options, multifields) {\n    var _this20;\n\n    _classCallCheck(this, _class18);\n\n    _this20 = _super9.call(this);\n    _this20.form = $(form);\n    _this20.fields = {};\n\n    if (typeof multifields != 'undefined') {\n      _this20.multifields = multifields;\n    } else {\n      _this20.multifields = [];\n    }\n\n    for (var i in fields) {\n      var field = fields[i];\n      _this20.fields[field.getName()] = field;\n    }\n\n    _this20.defaultOptions = _this20.getDefaultOptions();\n    _this20.options = Hawk.mergeObjects(_this20.defaultOptions, options);\n    _this20.infoContainer = _this20.form.find('.' + _this20.options.infoContainerClass);\n    _this20.infoWrapper = _this20.form.find('.' + _this20.options.infoWrapperClass);\n    _this20.info = _this20.form.find('.' + _this20.options.infoClass);\n    _this20.spinner = _this20.form.find('.' + _this20.options.spinnerClass);\n    _this20.button = _this20.options.obtainButton(_this20.form);\n    _this20.cancelButton = _this20.options.obtainCancelButton(_this20.form);\n    return _this20;\n  }\n\n  _createClass(_class18, [{\n    key: \"getDefaultOptions\",\n    value: function getDefaultOptions() {\n      var _this21 = this;\n\n      return {\n        autoDisable: true,\n        fadeSpeed: 200,\n        slideSpeed: 200,\n        infoContainerClass: \"form__info-container\",\n        infoWrapperClass: \"form__info-wrapper\",\n        infoClass: \"form__info\",\n        spinnerClass: \"form__spinner\",\n        obtainButton: function obtainButton(form) {\n          return form.find('button[type=\"submit\"]');\n        },\n        obtainCancelButton: function obtainCancelButton(form) {\n          return form.find('.form__cancel-button');\n        },\n        onSuccess: function onSuccess(result) {\n          _this21.defaultResultCallback(result, \"success\");\n        },\n        onPending: function onPending(result) {\n          _this21.defaultResultCallback(result, \"\");\n        },\n        onError: function onError(result) {\n          _this21.defaultResultCallback(result, \"failure\");\n        },\n        onException: function onException(result) {\n          if (typeof result != 'undefined') {\n            _this21.defaultResultCallback(result, \"failure\");\n          }\n        },\n        onComplete: function onComplete() {}\n      };\n    }\n  }, {\n    key: \"defaultResultCallback\",\n    value: function defaultResultCallback(result, className) {\n      if (typeof className == 'undefined') {\n        className = \"\";\n      }\n\n      this.checkFields(result.errorFields);\n      this.checkMultifields(result.errorMultifields);\n      this.changeMessage(\"<p class=\\\"\" + className + \"\\\">\" + result.message + \"</p>\");\n    }\n  }, {\n    key: \"getField\",\n    value: function getField(name) {\n      return this.fields[name];\n    }\n  }, {\n    key: \"checkFields\",\n    value: function checkFields(incorrectFields) {\n      for (var i in this.fields) {\n        var current = this.fields[i];\n\n        if (Hawk.isInObject(current.name, incorrectFields)) {\n          current.markAsIncorrect();\n        } else {\n          current.clear();\n        }\n      }\n\n      return this;\n    }\n  }, {\n    key: \"checkMultifields\",\n    value: function checkMultifields(incorrectMultifields) {\n      if (this.multifields.length > 0) {\n        var _iterator8 = _createForOfIteratorHelper(this.multifields),\n            _step8;\n\n        try {\n          for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {\n            var multifield = _step8.value;\n            multifield.refreshFields(this);\n\n            if (incorrectMultifields.hasOwnProperty(multifield.getName())) {\n              multifield.checkFields(incorrectMultifields[multifield.getName()]);\n            } else {\n              multifield.clear();\n            }\n          }\n        } catch (err) {\n          _iterator8.e(err);\n        } finally {\n          _iterator8.f();\n        }\n      }\n\n      return this;\n    }\n  }, {\n    key: \"validate\",\n    value: function validate() {\n      var result = [];\n\n      for (var i in this.fields) {\n        var current = this.fields[i];\n\n        if (current.validate()) {\n          current.clear();\n        } else {\n          current.markAsIncorrect();\n          result.push(current.getName());\n        }\n      }\n\n      return result;\n    }\n  }, {\n    key: \"bindFields\",\n    value: function bindFields() {\n      for (var i in this.fields) {\n        var current = this.fields[i];\n        current.run(this.form);\n      }\n\n      return this;\n    }\n  }, {\n    key: \"hasMessageBeenShown\",\n    value: function hasMessageBeenShown() {\n      return this.infoWrapper.is(':visible');\n    }\n  }, {\n    key: \"changeMessage\",\n    value: function changeMessage(message) {\n      var _this22 = this;\n\n      if (this.hasMessageBeenShown()) {\n        this.slideMessage(message);\n      } else {\n        this.hideMessage(function () {\n          _this22.slideMessage(message);\n        });\n      }\n    }\n  }, {\n    key: \"slideMessage\",\n    value: function slideMessage(message) {\n      var _this23 = this;\n\n      this.info.html(message);\n      this.infoWrapper.velocity(\"slideDown\", {\n        duration: this.options.slideSpeed,\n        complete: function complete() {\n          _this23.showMessage();\n        }\n      });\n    }\n  }, {\n    key: \"showMessage\",\n    value: function showMessage() {\n      this.info.velocity({\n        opacity: 1\n      }, {\n        duration: 200\n      });\n    }\n  }, {\n    key: \"hideMessage\",\n    value: function hideMessage(callback) {\n      this.info.velocity({\n        opacity: 0\n      }, {\n        duration: this.options.fadeSpeed,\n        complete: function complete() {\n          if (typeof callback != 'undefined') {\n            callback();\n          }\n        }\n      });\n    }\n  }, {\n    key: \"clearMessage\",\n    value: function clearMessage() {\n      var _this24 = this;\n\n      this.hideMessage(function () {\n        _this24.info.html(\"\");\n      });\n    }\n  }, {\n    key: \"showSpinner\",\n    value: function showSpinner() {\n      this.spinner.css({\n        opacity: 1\n      });\n      return this;\n    }\n  }, {\n    key: \"hideSpinner\",\n    value: function hideSpinner() {\n      this.spinner.css({\n        opacity: 0\n      });\n      return this;\n    }\n  }, {\n    key: \"collectData\",\n    value: function collectData(form) {\n      var data = new FormData(form);\n\n      for (var key in this.options.extraData) {\n        if (typeof this.options.extraData[key] == 'function') {\n          data.append(key, this.options.extraData[key]());\n        } else {\n          data.append(key, this.options.extraData[key]);\n        }\n      }\n\n      return data;\n    }\n  }, {\n    key: \"disable\",\n    value: function disable() {\n      this.form.attr('disabled', 'disabled');\n      this.form.find('input, textarea').attr('disabled', 'disabled');\n      return this;\n    }\n  }, {\n    key: \"hideButton\",\n    value: function hideButton() {\n      var _this25 = this;\n\n      this.button.velocity({\n        opacity: 0\n      }, {\n        duration: this.options.fadeSpeed,\n        complete: function complete() {\n          _this25.button.css({\n            visibility: 'hidden'\n          });\n        }\n      });\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      for (var i in this.fields) {\n        var current = this.fields[i];\n        current.clear();\n      }\n\n      return this;\n    }\n  }, {\n    key: \"clearValues\",\n    value: function clearValues() {\n      for (var i in this.fields) {\n        var current = this.fields[i];\n        current.clearValue();\n      }\n\n      return this;\n    }\n  }, {\n    key: \"run\",\n    value: function run() {\n      var _this26 = this;\n\n      this.bindFields();\n      this.form.submit(function (e) {\n        e.preventDefault();\n\n        _this26.submit();\n      });\n    }\n  }, {\n    key: \"submit\",\n    value: function submit() {\n      if (!this.isWorking()) {\n        this.startWorking();\n        this.showSpinner();\n        this.send();\n      }\n    }\n  }, {\n    key: \"send\",\n    value: function send() {\n      throw new Error(\"This method should be overwritten in the subclass.\");\n    }\n  }]);\n\n  return _class18;\n}(Hawk.SingleThreadClass);\n\nHawk.StaticFormSender = /*#__PURE__*/function (_Hawk$FormSender) {\n  _inherits(_class19, _Hawk$FormSender);\n\n  var _super10 = _createSuper(_class19);\n\n  function _class19(form, fields, callback, options) {\n    var _this27;\n\n    _classCallCheck(this, _class19);\n\n    _this27 = _super10.call(this, form, fields, options);\n    _this27.callback = callback;\n    return _this27;\n  }\n\n  _createClass(_class19, [{\n    key: \"send\",\n    value: function send() {\n      this.callback(this);\n    }\n  }]);\n\n  return _class19;\n}(Hawk.FormSender);\n\nHawk.AjaxFormSender = /*#__PURE__*/function (_Hawk$FormSender2) {\n  _inherits(_class20, _Hawk$FormSender2);\n\n  var _super11 = _createSuper(_class20);\n\n  function _class20(form, fields, path, options, multifields) {\n    var _this28;\n\n    _classCallCheck(this, _class20);\n\n    _this28 = _super11.call(this, form, fields, options, multifields);\n    _this28.path = path;\n    return _this28;\n  }\n\n  _createClass(_class20, [{\n    key: \"getDefaultOptions\",\n    value: function getDefaultOptions() {\n      var defaultOptions = _get(_getPrototypeOf(_class20.prototype), \"getDefaultOptions\", this).call(this);\n\n      defaultOptions.method = \"POST\";\n      return defaultOptions;\n    }\n  }, {\n    key: \"send\",\n    value: function send() {\n      var _this29 = this;\n\n      var data = this.collectData(this.form.get(0));\n      $.ajax({\n        url: this.path,\n        type: this.options.method,\n        data: data,\n        cache: false,\n        processData: false,\n        // Don't process the files\n        contentType: false,\n        dataType: 'json',\n        success: function success(result) {\n          //console.log(result);\n          if (result.status == Hawk.RequestStatus.SUCCESS) {\n            _this29.clear();\n\n            if (_this29.options.autoDisable) {\n              _this29.hideButton();\n\n              _this29.disable();\n            }\n\n            _this29.options.onSuccess(result);\n          } else if (result.status == Hawk.RequestStatus.PENDING) {\n            _this29.options.onPending(result);\n          } else if (result.status == Hawk.RequestStatus.ERROR) {\n            _this29.options.onError(result);\n          } else {\n            _this29.options.onException(result);\n          }\n        },\n        error: function error(jqXHR, textStatus, errorThrown) {\n          //console.log(jqXHR.responseText);\n          _this29.changeMessage(\"There occurred an unexpected error during processing the form. Please try again later.\"); //console.log(errorThrown);\n\n\n          if (typeof _this29.options.onException == 'function') {\n            _this29.options.onException();\n          }\n        },\n        complete: function complete(jqXHR) {\n          _this29.hideSpinner();\n\n          _this29.finishWorking();\n\n          _this29.options.onComplete();\n        }\n      });\n    }\n  }]);\n\n  return _class20;\n}(Hawk.FormSender);\n\nHawk.ComponentsConstants = {\n  COMPONENT_ID_ATTRIBUTE: \"data-hawk-component-id\",\n  COMPONENT_CLASS_ID_ATTRIBUTE: \"data-hawk-component-class\"\n};\n\nHawk.Component = /*#__PURE__*/function () {\n  function _class21(id) {\n    _classCallCheck(this, _class21);\n\n    this.id = id || -1;\n    this.instanceNew = false;\n    this.values = {};\n    this.properties = {};\n    this.methods = {};\n    this.subcomponentsFilters = {};\n    this.subcomponents = {};\n  }\n\n  _createClass(_class21, [{\n    key: \"getRepresentativeName\",\n    value: function getRepresentativeName() {\n      throw new Error(\"This method should be overwritten in the subclass.\");\n    }\n  }, {\n    key: \"getURL\",\n    value: function getURL() {\n      return Hawk.TextParser.preparePlainPath(this.getRepresentativeName());\n    }\n  }, {\n    key: \"getAsHTML\",\n    value: function getAsHTML() {\n      throw new Error(\"This method should be overwritten in the subclass.\");\n    }\n  }, {\n    key: \"isDescendingOrder\",\n    value: function isDescendingOrder() {\n      return false;\n    }\n  }, {\n    key: \"getID\",\n    value: function getID() {\n      return this.id;\n    }\n  }, {\n    key: \"updateInstance\",\n    value: function updateInstance(anotherInstance) {\n      this.values = anotherInstance.values;\n      this.subcomponents = anotherInstance.subcomponents;\n      this.refreshView(); // for (var i in this.values) {\n      //     this.values[i] = anotherInstance.get(i);\n      // }\n      //\n      // for (var s in this.subcomponents) {\n      //     this.subcomponents[s] = anotherInstance.subcomp\n      // }\n    }\n  }, {\n    key: \"set\",\n    value: function set(key, value) {\n      this.values[key] = value;\n      return this;\n    }\n  }, {\n    key: \"get\",\n    value: function get(key) {\n      return this.values[key];\n    }\n  }, {\n    key: \"update\",\n    value: function update(key, value) {\n      this.set(key, value);\n      this.refreshView();\n      return this;\n    }\n  }, {\n    key: \"getProperty\",\n    value: function getProperty(key) {\n      var property = this.properties[key];\n      return property(this);\n    }\n  }, {\n    key: \"getContainer\",\n    value: function getContainer() {\n      if (this.getID() != -1) {\n        return $('.' + this.constructor.getClassname() + '[' + Hawk.ComponentsConstants.COMPONENT_ID_ATTRIBUTE + '=\"' + this.getID() + '\"]');\n      } else {\n        return $('.' + this.constructor.getClassname());\n      }\n    }\n  }, {\n    key: \"getElement\",\n    value: function getElement(name) {\n      var _this30 = this;\n\n      if (this.getID() != -1) {\n        return this.getContainer().find('.' + this.constructor.getClassname() + '__' + name).filter(function (index, current) {\n          var parents = $(current).parents('.' + _this30.constructor.getClassname());\n          return parents.eq(0).attr(Hawk.ComponentsConstants.COMPONENT_ID_ATTRIBUTE) == _this30.getID();\n        });\n      } else {\n        return this.getContainer().find('.' + this.constructor.getClassname() + '__' + name);\n      }\n    }\n  }, {\n    key: \"addSubcomponent\",\n    value: function addSubcomponent(subcomponent) {\n      if (typeof this.subcomponents[subcomponent.constructor.getClassID()] == 'undefined') {\n        this.subcomponents[subcomponent.constructor.getClassID()] = [];\n      }\n\n      if (subcomponent.isDescendingOrder()) {\n        this.subcomponents[subcomponent.constructor.getClassID()].unshift(subcomponent);\n      } else {\n        this.subcomponents[subcomponent.constructor.getClassID()].push(subcomponent);\n      }\n    }\n  }, {\n    key: \"getSubcomponent\",\n    value: function getSubcomponent(className, id) {\n      if (typeof this.subcomponents[className] != 'undefined') {\n        var _iterator9 = _createForOfIteratorHelper(this.subcomponents[className]),\n            _step9;\n\n        try {\n          for (_iterator9.s(); !(_step9 = _iterator9.n()).done;) {\n            var subcomponent = _step9.value;\n\n            if (subcomponent.getID() == id) {\n              return subcomponent;\n            }\n          }\n        } catch (err) {\n          _iterator9.e(err);\n        } finally {\n          _iterator9.f();\n        }\n\n        return null;\n      } else {\n        return null;\n      }\n    }\n  }, {\n    key: \"getSubcomponentsContainer\",\n    value: function getSubcomponentsContainer(className) {\n      return this.getElement('subcomponents').filter('[' + Hawk.ComponentsConstants.COMPONENT_CLASS_ID_ATTRIBUTE + '=\"' + className + '\"]');\n    }\n  }, {\n    key: \"clearSubcomponentsContainer\",\n    value: function clearSubcomponentsContainer(className) {\n      var subcomponentsContainer = this.getSubcomponentsContainer(className);\n      subcomponentsContainer.html('');\n      return this;\n    }\n  }, {\n    key: \"clearSubcomponents\",\n    value: function clearSubcomponents(className) {\n      if (typeof this.subcomponents[className] != 'undefined') {\n        this.subcomponents[className] = [];\n      }\n    }\n  }, {\n    key: \"placeSubcomponent\",\n    value: function placeSubcomponent(subcomponent, html) {\n      this.addSubcomponent(subcomponent);\n      this.showSubcomponent(subcomponent, html);\n    }\n  }, {\n    key: \"showSubcomponent\",\n    value: function showSubcomponent(subcomponent, html) {\n      if (typeof html == 'undefined') {\n        html = subcomponent.getAsHTML();\n      }\n\n      var subcomponentsContainer = this.getSubcomponentsContainer(subcomponent.constructor.getClassID());\n      var subcomponentHTML = $(html);\n      subcomponentHTML.css({\n        display: 'none'\n      });\n\n      if (subcomponent.isDescendingOrder()) {\n        subcomponentsContainer.prepend(subcomponentHTML);\n      } else {\n        subcomponentsContainer.append(subcomponentHTML);\n      }\n\n      subcomponent.refreshView();\n      subcomponentHTML.velocity(\"slideDown\");\n    }\n  }, {\n    key: \"getSubcomponents\",\n    value: function getSubcomponents(classID) {\n      if (typeof this.subcomponentsFilters[classID] == 'function' && typeof this.subcomponents[classID] != 'undefined') {\n        return this.subcomponentsFilters[classID](this.subcomponents[classID]);\n      } else {\n        return this.subcomponents[classID];\n      }\n    }\n  }, {\n    key: \"refreshSubcomponents\",\n    value: function refreshSubcomponents(classID) {\n      this.clearSubcomponentsContainer(classID);\n      var theseSubcomponents = this.getSubcomponents(classID);\n\n      var _iterator10 = _createForOfIteratorHelper(theseSubcomponents),\n          _step10;\n\n      try {\n        for (_iterator10.s(); !(_step10 = _iterator10.n()).done;) {\n          var subcmpt = _step10.value;\n          this.showSubcomponent(subcmpt);\n        }\n      } catch (err) {\n        _iterator10.e(err);\n      } finally {\n        _iterator10.f();\n      }\n    }\n  }, {\n    key: \"updateElementValue\",\n    value: function updateElementValue(element, value) {\n      if (element.is('input')) {\n        element.val(value);\n      } else {\n        element.html(value);\n      }\n    }\n  }, {\n    key: \"refreshValues\",\n    value: function refreshValues() {\n      for (var i in this.values) {\n        var element = this.getElement(i);\n        this.updateElementValue(element, this.values[i]);\n      }\n    }\n  }, {\n    key: \"refreshProperties\",\n    value: function refreshProperties() {\n      for (var i in this.properties) {\n        var element = this.getElement(i);\n        this.updateElementValue(element, this.getProperty(i));\n      }\n    }\n  }, {\n    key: \"refreshAllSubcomponents\",\n    value: function refreshAllSubcomponents() {\n      for (var i in this.subcomponents) {\n        this.refreshSubcomponents(i); // this.clearSubcomponentsContainer(i);\n        //\n        // const theseSubcomponents = this.getSubcomponents(i);\n        //\n        // for (const j in theseSubcomponents) {\n        //     const ThisSubcomponent = theseSubcomponents[j];\n        //\n        //     this.showSubcomponent(ThisSubcomponent);\n        //     //container.append(Assignee.getAsHTML());\n        //\n        //     //Assignee.refreshView();\n        // }\n        // for (let j in this.subcomponents[i]) {\n        //     console.log(this.subcomponents[i][j].getID());\n        //\n        //     //if (this.subcomponents[i][j].hasOwnProperty('refreshView')) {\n        //         this.subcomponents[i][j].refreshView();\n        //     //}\n        //\n        // }\n      }\n    }\n  }, {\n    key: \"refreshMethods\",\n    value: function refreshMethods() {\n      for (var i in this.methods) {\n        this.methods[i](this);\n      }\n    }\n  }, {\n    key: \"refreshView\",\n    value: function refreshView() {\n      var element = this.getElement(\"id\");\n      element.html(this.getID());\n      this.refreshValues();\n      this.refreshProperties();\n      this.refreshAllSubcomponents();\n      this.refreshMethods();\n    }\n  }, {\n    key: \"remove\",\n    value: function remove() {\n      var container = this.getContainer();\n      container.velocity(\"slideUp\", {\n        complete: function complete() {\n          container.remove();\n        }\n      });\n    }\n  }, {\n    key: \"setIsNew\",\n    value: function setIsNew(instanceNew) {\n      this.instanceNew = instanceNew;\n      return this;\n    }\n  }, {\n    key: \"isInstanceNew\",\n    value: function isInstanceNew() {\n      return this.instanceNew;\n    }\n  }, {\n    key: \"prepareFromDOM\",\n    value: function prepareFromDOM() {\n      for (var i in this.values) {\n        var element = this.getElement(i);\n\n        if (element.is('input, textarea')) {\n          this.values[i] = element.val();\n        } else {\n          this.values[i] = element.text().trim();\n        }\n      }\n    }\n  }], [{\n    key: \"getClassID\",\n    value: function getClassID() {\n      throw new Error(\"This method should be overwritten in the subclass.\");\n    }\n  }, {\n    key: \"getClassname\",\n    value: function getClassname() {\n      throw new Error(\"This method should be overwritten in the subclass.\");\n    }\n  }, {\n    key: \"getAppContext\",\n    value: function getAppContext() {\n      if (typeof AppContext != 'undefined') {\n        return AppContext;\n      } else {\n        return {};\n      }\n    }\n  }]);\n\n  return _class21;\n}();\n\nHawk.ComponentClass = /*#__PURE__*/function () {\n  function _class22(classname, values, options) {\n    _classCallCheck(this, _class22);\n\n    this.classname = classname;\n    this.values = values;\n    this.options = options;\n    this.clearInstances();\n  } // this.parseJSON = parseJSON || function(json) {\n  //     return {\n  //         id: -1,\n  //         values: {},\n  //         subcomponents: {}\n  //     };\n  // };\n\n\n  _createClass(_class22, [{\n    key: \"getOptions\",\n    value: function getOptions() {\n      return this.options;\n    }\n  }, {\n    key: \"getValues\",\n    value: function getValues() {\n      return this.values;\n    }\n  }, {\n    key: \"newInstance\",\n    value: function newInstance(id, values) {\n      var certainValues = this.getValues();\n\n      if (typeof values != 'undefined') {\n        certainValues = this.parseValues(values);\n      }\n\n      var instance = new Hawk.Component(this.getClassname(), certainValues, this.getOptions(), id);\n      instance.run();\n      instance.refreshView();\n      this.instances[instance.getID()] = instance;\n      return instance;\n    }\n  }, {\n    key: \"instanceExists\",\n    value: function instanceExists(index) {\n      return typeof this.instances[index] != 'undefined';\n    }\n  }, {\n    key: \"parseValues\",\n    value: function parseValues(certainValues) {\n      var resultValues = {};\n\n      for (var i in this.values) {\n        if (typeof certainValues[i] != 'undefined') {\n          resultValues[i] = certainValues[i];\n        }\n      }\n\n      return resultValues;\n    }\n  }, {\n    key: \"getInstance\",\n    value: function getInstance(index) {\n      if (this.instanceExists(index)) {\n        return this.instances[index];\n      } else {\n        return null;\n      }\n    }\n  }, {\n    key: \"getValueFromDOM\",\n    value: function getValueFromDOM(container, name) {\n      var element = container.find('.' + this.getClassname() + \"__\" + name);\n\n      if (element.length > 0) {\n        return element.html();\n      } else {\n        return null;\n      }\n    }\n  }, {\n    key: \"createInstanceFromDOM\",\n    value: function createInstanceFromDOM(container, id) {\n      var currentValues = {};\n\n      for (var _name in this.values) {\n        currentValues[_name] = this.getValueFromDOM(container, _name);\n      }\n\n      currentValues = this.options.onCreateFromDOM(container, currentValues);\n      this.newInstance(id, currentValues);\n    }\n  }, {\n    key: \"getAllInstances\",\n    value: function getAllInstances() {\n      return this.instances;\n    }\n  }, {\n    key: \"updateAll\",\n    value: function updateAll(key, value) {\n      for (var i in this.instances) {\n        this.instances[i].update(key, value);\n      }\n    }\n  }, {\n    key: \"removeInstance\",\n    value: function removeInstance(index) {\n      if (this.instanceExists(index)) {\n        var current = this.instances[index];\n        current.remove();\n        delete this.instances[index];\n      }\n    }\n  }, {\n    key: \"refreshView\",\n    value: function refreshView() {\n      for (var i in this.instances) {\n        this.instances[i].refreshView();\n      }\n    }\n  }, {\n    key: \"clearInstances\",\n    value: function clearInstances() {\n      this.instances = {};\n    }\n  }, {\n    key: \"getClassname\",\n    value: function getClassname() {\n      return this.classname;\n    }\n  }, {\n    key: \"initialize\",\n    value: function initialize() {\n      var components = $('.' + this.getClassname());\n      var currentID = -1;\n      var that = this;\n      components.each(function () {\n        currentID = $(this).attr(Hawk.ComponentsConstants.COMPONENT_ID_ATTRIBUTE);\n\n        if (currentID > 0) {\n          that.createInstanceFromDOM($(this), currentID);\n        }\n      });\n    }\n  }]);\n\n  return _class22;\n}();\n\nHawk.ComponentController = /*#__PURE__*/function () {\n  function _class23(options) {\n    _classCallCheck(this, _class23);\n\n    this.defaultOptions = {\n      singleInstanceContainerClass: 'hawk-component-container',\n      // is it necessary?\n      onComponentsLoad: function onComponentsLoad(controller, id) {},\n      onComponentsLoadingComplete: function onComponentsLoadingComplete(controller, id) {},\n      appendComponents: function appendComponents(controller, result) {\n        var instancesContainerContent = controller.getInstancesContainerContent();\n\n        if (typeof result.html != 'undefined') {\n          instancesContainerContent.html(result.html);\n          controller.parseInstances(result.instances);\n        } else {\n          instancesContainerContent.html(\"\");\n          controller.attachInstances(result.instances);\n        }\n      },\n      getInstanceAsHTML: function getInstanceAsHTML(instance) {\n        return instance.getAsHTML();\n      },\n      ordering: 'ASC',\n      requestType: 'GET'\n    };\n    this.options = Hawk.mergeObjects(this.defaultOptions, options); //console.log(this.constructor.getClassID() + \" - ORDER: \" + this.options.order);\n\n    this.instances = {};\n  }\n\n  _createClass(_class23, [{\n    key: \"createFromJSON\",\n    value: function createFromJSON(json) {\n      throw new Error(\"This method should be overwritten in the subclass.\");\n    }\n  }, {\n    key: \"createFromDOM\",\n    value: function createFromDOM(id) {\n      throw new Error(\"This method should be overwritten in the subclass.\");\n    }\n  }, {\n    key: \"getLoadingSingleComponentPath\",\n    value: function getLoadingSingleComponentPath(id) {\n      throw new Error(\"This method should be overwritten in the subclass.\");\n    }\n  }, {\n    key: \"getLoadingComponentsPath\",\n    value: function getLoadingComponentsPath(id) {\n      throw new Error(\"This method should be overwritten in the subclass.\");\n    }\n  }, {\n    key: \"getSingleInstanceContainerClass\",\n    value: function getSingleInstanceContainerClass() {\n      throw new Error(\"This method should be overwritten in the subclass.\");\n    }\n  }, {\n    key: \"getInstancesContainerClass\",\n    value: function getInstancesContainerClass() {\n      throw new Error(\"This method should be overwritten in the subclass.\");\n    }\n  }, {\n    key: \"getInstancesContainerContentClass\",\n    value: function getInstancesContainerContentClass() {\n      return \"hawk-instances-container__content\";\n    }\n  }, {\n    key: \"getLoadingLayerClass\",\n    value: function getLoadingLayerClass() {\n      return \"hawk-instances-container__loading-layer\";\n    }\n  }, {\n    key: \"putInstance\",\n    value: function putInstance(instance) {\n      this.instances[instance.getID()] = instance;\n      return this;\n    }\n  }, {\n    key: \"getInstance\",\n    value: function getInstance(id) {\n      return this.instances[id] || null;\n    }\n  }, {\n    key: \"attachInstance\",\n    value: function attachInstance(instance, ordering) {\n      if (typeof ordering == 'undefined') {\n        ordering = this.options.ordering;\n      }\n\n      var instancesContainerContent = this.getInstancesContainerContent();\n\n      if (ordering == 'DESC') {\n        instancesContainerContent.prepend(this.options.getInstanceAsHTML(instance));\n      } else {\n        instancesContainerContent.append(this.options.getInstanceAsHTML(instance));\n      }\n\n      instance.refreshView();\n      this.putInstance(instance);\n    }\n  }, {\n    key: \"getInstancesContainer\",\n    value: function getInstancesContainer() {\n      return $('.' + this.getInstancesContainerClass() + '[' + Hawk.ComponentsConstants.COMPONENT_CLASS_ID_ATTRIBUTE + '=\"' + this.constructor.getClassID() + '\"]');\n    }\n  }, {\n    key: \"getInstancesContainerContent\",\n    value: function getInstancesContainerContent() {\n      var container = this.getInstancesContainer();\n      return container.find('.' + this.getInstancesContainerContentClass());\n    }\n  }, {\n    key: \"getLoadingLayer\",\n    value: function getLoadingLayer() {\n      var container = this.getInstancesContainer();\n      return container.find('.' + this.getLoadingLayerClass());\n    }\n  }, {\n    key: \"getSingleInstanceContainer\",\n    value: function getSingleInstanceContainer(id) {\n      return $('.' + this.getSingleInstanceContainerClass() + '[' + Hawk.ComponentsConstants.COMPONENT_ID_ATTRIBUTE + '=\"' + id + '\"]');\n    }\n  }, {\n    key: \"parseInstances\",\n    value: function parseInstances(instances) {\n      var _iterator11 = _createForOfIteratorHelper(instances),\n          _step11;\n\n      try {\n        for (_iterator11.s(); !(_step11 = _iterator11.n()).done;) {\n          var instanceJSON = _step11.value;\n          var instance = this.createFromJSON(instanceJSON);\n          this.putInstance(instance);\n          instance.refreshView();\n        }\n      } catch (err) {\n        _iterator11.e(err);\n      } finally {\n        _iterator11.f();\n      }\n    }\n  }, {\n    key: \"attachInstances\",\n    value: function attachInstances(instances) {\n      var _iterator12 = _createForOfIteratorHelper(instances),\n          _step12;\n\n      try {\n        for (_iterator12.s(); !(_step12 = _iterator12.n()).done;) {\n          var instanceJSON = _step12.value;\n          var instance = this.createFromJSON(instanceJSON);\n          this.attachInstance(instance);\n          instance.refreshView();\n        }\n      } catch (err) {\n        _iterator12.e(err);\n      } finally {\n        _iterator12.f();\n      }\n    }\n  }, {\n    key: \"load\",\n    value: function load(id, extraData, url) {\n      var _this31 = this;\n\n      if (typeof extraData == 'undefined') {\n        extraData = {};\n      }\n\n      var loadingLayer = this.getLoadingLayer();\n      loadingLayer.css({\n        display: 'block'\n      }); // console.log(\"PATH: \" + this.getLoadingComponentsPath(id));\n      //\n\n      console.log(extraData);\n\n      if (typeof url == 'undefined') {\n        url = this.getLoadingComponentsPath(id);\n      }\n\n      console.log(url);\n      $.ajax({\n        url: url,\n        type: this.options.requestType,\n        data: extraData,\n        // cache: false,\n        // processData: false, // Don't process the files\n        // contentType: false,\n        dataType: \"json\",\n        success: function success(result) {\n          console.log(result);\n\n          if (result.status == Hawk.RequestStatus.SUCCESS) {\n            _this31.options.appendComponents(_this31, result);\n\n            _this31.options.onComponentsLoad(_this31, id);\n          } else if (result.status == Hawk.RequestStatus.ERROR) {} else {}\n        },\n        error: function error(jqXHR, textStatus, errorThrown) {\n          console.log(jqXHR.responseText); //console.log(errorThrown);\n        },\n        complete: function complete(jqXHR) {\n          loadingLayer.css({\n            display: 'none'\n          });\n\n          _this31.options.onComponentsLoadingComplete(_this31);\n        }\n      });\n    }\n  }, {\n    key: \"loadOne\",\n    value: function loadOne(id) {\n      var _this32 = this;\n\n      console.log(\"PATH: \" + this.getLoadingSingleComponentPath(id));\n      $.ajax({\n        url: this.getLoadingSingleComponentPath(id),\n        type: 'GET',\n        data: {},\n        cache: false,\n        processData: false,\n        // Don't process the files\n        contentType: false,\n        dataType: 'json',\n        success: function success(result) {\n          if (result.status == Hawk.RequestStatus.SUCCESS) {\n            var instance = _this32.createFromJSON(result.instance);\n\n            _this32.putInstance(instance);\n\n            var instanceContainer = _this32.getSingleInstanceContainer(result.id);\n\n            instanceContainer.html(result.html);\n            instance.refreshView();\n            console.log(instance);\n\n            _this32.options.onComponentsLoad(_this32, id);\n          } else if (result.status == Hawk.RequestStatus.ERROR) {} else {}\n        },\n        error: function error(jqXHR, textStatus, errorThrown) {\n          console.log(jqXHR.responseText); //console.log(errorThrown);\n        },\n        complete: function complete(jqXHR) {\n          _this32.options.onComponentsLoadingComplete(_this32, id);\n        }\n      });\n    }\n  }], [{\n    key: \"getClassID\",\n    value: function getClassID() {\n      throw new Error(\"This method should be overwritten in the subclass.\");\n    }\n  }]);\n\n  return _class23;\n}();\n\nHawk.DetailsList = /*#__PURE__*/function (_Hawk$SingleThreadCla5) {\n  _inherits(_class24, _Hawk$SingleThreadCla5);\n\n  var _super12 = _createSuper(_class24);\n\n  function _class24(container, options) {\n    var _this33;\n\n    _classCallCheck(this, _class24);\n\n    _this33 = _super12.call(this);\n    _this33.container = $(container);\n    _this33.current = null;\n    _this33.headers = null;\n    _this33.options = {};\n    _this33.defaultOptions = {\n      itemClass: \"hawk-details-list__item\",\n      headerClass: \"hawk-details-list__header\",\n      contentContainerClass: \"hawk-details-list__content-container\",\n      contentClass: \"hawk-details-list__content\",\n      activeClass: \"active\",\n      eventName: \"click.detailsList\",\n      autoHide: true,\n      getContentContainer: function getContentContainer(header) {\n        var item = _this33.options.getItem(header);\n\n        return item.find('.' + _this33.options.contentContainerClass);\n      },\n      getItem: function getItem(element) {\n        return element.parents('.' + _this33.options.itemClass);\n      },\n      slideSpeed: 200,\n      fadeSpeed: 200,\n      onShow: function onShow(dl, header, contentContainer) {\n        header.find('.details-list-item__icon').removeClass('icon-arrow--south').addClass('icon-arrow--north');\n      },\n      onHide: function onHide(dl, header, contentContainer) {\n        header.find('.details-list-item__icon').removeClass('icon-arrow--north').addClass('icon-arrow--south');\n      }\n    };\n    _this33.options = Hawk.mergeObjects(_this33.defaultOptions, options);\n    return _this33;\n  }\n\n  _createClass(_class24, [{\n    key: \"show\",\n    value: function show(header) {\n      var _this34 = this;\n\n      if (this.options.autoHide && this.current != null) {\n        this.hide(this.current);\n      }\n\n      this.current = header;\n      var contentContainer = this.options.getContentContainer(header);\n      contentContainer.velocity(\"slideDown\", {\n        duration: this.options.slideSpeed,\n        complete: function complete() {\n          _this34.finishWorking();\n        }\n      });\n      var parent = this.options.getItem(header);\n      parent.addClass(this.options.activeClass);\n      this.options.onShow(this, header, contentContainer);\n    }\n  }, {\n    key: \"showByIndex\",\n    value: function showByIndex(index) {}\n  }, {\n    key: \"hide\",\n    value: function hide(header) {\n      var _this35 = this;\n\n      var contentContainer = this.options.getContentContainer(header);\n      contentContainer.velocity(\"slideUp\", {\n        duration: this.options.slideSpeed,\n        complete: function complete() {\n          _this35.finishWorking();\n        }\n      });\n      var parent = this.options.getItem(header);\n      parent.removeClass(this.options.activeClass);\n      this.options.onHide(this, header, contentContainer);\n    }\n  }, {\n    key: \"toggle\",\n    value: function toggle(header) {\n      if (!this.isWorking()) {\n        this.startWorking();\n        var contentContainer = this.options.getContentContainer(header);\n\n        if (contentContainer.is(':visible')) {\n          this.hide(header);\n        } else {\n          this.show(header);\n        }\n      }\n    }\n  }, {\n    key: \"refreshDependencies\",\n    value: function refreshDependencies() {\n      var _this36 = this;\n\n      if (this.headers != null) {\n        this.headers.unbind(this.options.eventName);\n      }\n\n      var that = this;\n      this.headers = this.container.find('.' + this.options.headerClass);\n      this.headers.bind(this.options.eventName, function (e) {\n        var header = $(e.currentTarget);\n\n        _this36.toggle(header);\n      });\n    }\n  }, {\n    key: \"run\",\n    value: function run() {\n      this.refreshDependencies();\n    }\n  }]);\n\n  return _class24;\n}(Hawk.SingleThreadClass);\n\nHawk.AjaxOverlayerManagerConstants = {\n  Modes: {\n    DEFAULT: 0,\n    DELEGATE_EVENTS: 1\n  },\n  getDefaultHashPattern: function getDefaultHashPattern() {\n    return \"^o\\/[0-9]+\\/[a-zA-Z\\-_0-9]+\\/[a-zA-Z\\-_0-9]+(\\/)?(((&)*[a-zA-Z0-9]+=[a-zA-Z0-9]+)*)?$\";\n  }\n};\nHawk.OverlayerManagerConstants = {\n  Modes: {\n    DEFAULT: 0,\n    DELEGATE_EVENTS: 1\n  },\n  getDefaultHashPattern: function getDefaultHashPattern() {\n    return \"^o\\/[0-9]+\\/[a-zA-Z\\-_0-9]+\\/[a-zA-Z\\-_0-9]+(\\/)?(((&)*[a-zA-Z0-9]+=[a-zA-Z0-9]+)*)?$\";\n  }\n};\nHawk.OverlayerManager = (_class25 = /*#__PURE__*/function (_Hawk$SingleThreadCla6) {\n  _inherits(_class25, _Hawk$SingleThreadCla6);\n\n  var _super13 = _createSuper(_class25);\n\n  function _class25(container, options) {\n    var _this37;\n\n    _classCallCheck(this, _class25);\n\n    _this37 = _super13.call(this);\n    _this37.container = $(container);\n    _this37.overlayerID = _this37.container.attr('data-overlayer-id');\n    _this37.open = false;\n    _this37.body;\n    _this37.lang;\n    _this37.contentContainer;\n    _this37.content;\n    _this37.buttons;\n    _this37.closeButton;\n    _this37.defaultOptions = {\n      fadeSpeed: 200,\n      slideSpeed: 200,\n      mode: Hawk.AjaxOverlayerManagerConstants.Modes.DEFAULT,\n      closeOnClickOutside: false,\n      popstateEventName: 'popstate.ajaxOverlayerManager',\n      eventName: 'click.overlayerManager',\n      wrapperClass: 'overlayer__wrapper',\n      contentContainerClass: 'overlayer__content-container',\n      contentClass: 'overlayer__content',\n      loadingLayerClass: 'overlayer__loading-layer',\n      closeButtonClass: 'overlayer-close',\n      baseZIndexValue: 9000,\n      changeContent: function changeContent(aom, content, callback) {\n        aom.content.css({\n          opacity: 0\n        });\n        aom.content.html(content);\n        aom.contentContainer.velocity(\"slideDown\", {\n          duration: aom.options.slideSpeed,\n          complete: function complete() {\n            aom.content.velocity({\n              opacity: 1\n            }, {\n              duration: aom.options.fadeSpeed,\n              complete: function complete() {\n                if (typeof callback == 'function') {\n                  callback();\n                }\n              }\n            });\n          }\n        });\n      },\n      hide: function hide(aom) {\n        aom.container.velocity(\"fadeOut\", {\n          duration: aom.options.fadeSpeed,\n          complete: function complete() {\n            aom.body.css({\n              overflow: 'auto'\n            });\n            aom.contentContainer.hide();\n            aom.content.html(\"\");\n          }\n        });\n      },\n      onLoading: function onLoading(aom, id, result) {},\n      onLoad: function onLoad(aom, id, result) {},\n      onShow: function onShow(aom) {},\n      onHide: function onHide(aom) {},\n      onInitialize: function onInitialize(aom, hash) {\n        if (hash.length > 0) {\n          if (hash.startsWith(\"#\")) {\n            hash = hash.substring(1);\n          }\n\n          var regexp = new RegExp(Hawk.AjaxOverlayerManagerConstants.getDefaultHashPattern());\n\n          if (regexp.test(hash)) {\n            var parts = hash.split('/');\n\n            if (parts[1] == aom.getOverlayerID()) {\n              var id = parts[2];\n              var bundle = {};\n\n              if (typeof parts[4] != 'undefined') {\n                bundle = Hawk.createBundleFromString(parts[4]);\n              }\n\n              aom.load(id, bundle);\n            }\n          }\n        }\n      }\n    };\n    _this37.options = Hawk.mergeObjects(_this37.defaultOptions, options);\n    return _this37;\n  }\n\n  _createClass(_class25, [{\n    key: \"getOverlayerID\",\n    value: function getOverlayerID() {\n      return this.overlayerID;\n    }\n  }, {\n    key: \"getLang\",\n    value: function getLang() {\n      return this.lang;\n    }\n  }, {\n    key: \"getButtonsSelector\",\n    value: function getButtonsSelector() {\n      return '.' + this.options.buttonClass + '[data-overlayer-id=\"' + this.getOverlayerID() + '\"]';\n    }\n  }, {\n    key: \"hide\",\n    value: function hide() {\n      if (this.isWorking()) {\n        this.abortRequest();\n      }\n\n      this.constructor.instances--;\n      this.options.onHide(this);\n      this.options.hide(this);\n      this.clearHash();\n      $(window).unbind(this.options.popstateEventName);\n    }\n  }, {\n    key: \"show\",\n    value: function show() {\n      var _this38 = this;\n\n      this.constructor.instances++;\n      this.options.onShow(this); //console.log(\"Overlayer showing\");\n\n      this.container.css({\n        'z-index': this.options.baseZIndexValue + this.constructor.instances\n      });\n      this.container.velocity(\"fadeIn\", {\n        duration: this.options.fadeSpeed,\n        complete: function complete() {\n          _this38.body.css({\n            overflow: 'hidden'\n          });\n        }\n      });\n    }\n  }, {\n    key: \"isOpen\",\n    value: function isOpen() {\n      return this.container.is(\":visible\");\n    }\n  }, {\n    key: \"load\",\n    value: function load(id, bundle) {\n      if (!this.isOpen()) {\n        this.show();\n      } else {\n        $(window).unbind(this.options.popstateEventName);\n      }\n\n      this.loadContent(id, bundle);\n    }\n  }, {\n    key: \"loadContent\",\n    value: function loadContent(id, bundle) {\n      throw new Error(\"This method should be overwritten in the subclass.\");\n    }\n  }, {\n    key: \"actionLoad\",\n    value: function actionLoad(id, result) {\n      var _this39 = this;\n\n      if (result.status == Hawk.RequestStatus.SUCCESS) {\n        var finalCallback = function finalCallback() {};\n\n        if (typeof this.options.onLoad == 'function') {\n          finalCallback = function finalCallback() {\n            _this39.options.onLoad(_this39, id, result);\n          };\n        }\n\n        if (typeof this.options.onLoading == 'function') {\n          this.options.onLoading(this, id, result);\n        }\n\n        this.changeContent(result.html, finalCallback);\n      } else {\n        this.hide();\n      }\n\n      if (typeof result.anchor != 'undefined' && result.anchor.length > 0) {\n        this.setHash(this.createAnchor(result.anchor, result.bundle));\n      }\n\n      $(window).bind(this.options.popstateEventName, function (e) {\n        _this39.hide();\n      });\n    }\n  }, {\n    key: \"changeContent\",\n    value: function changeContent(content, callback) {\n      this.options.changeContent(this, content, callback);\n    }\n  }, {\n    key: \"clearHash\",\n    value: function clearHash() {//history.pushState(\"\", document.title, window.location.pathname + window.location.search);\n    }\n  }, {\n    key: \"setHash\",\n    value: function setHash(hash) {\n      //history.pushState(\"\", document.title, window.location.pathname + window.location.search);\n      window.location.hash = '#' + hash;\n      return this;\n    }\n  }, {\n    key: \"createAnchor\",\n    value: function createAnchor(anchor, bundle) {\n      var resultAnchor = \"o/\" + this.getOverlayerID() + \"/\" + anchor;\n\n      if (typeof bundle != 'undefined') {\n        resultAnchor += \"/\" + Hawk.createStringFromBundle(bundle);\n      }\n\n      return resultAnchor;\n    }\n  }, {\n    key: \"onButtonClick\",\n    value: function onButtonClick(e) {\n      e.preventDefault();\n      e.stopPropagation();\n      var jQueryThis = $(e.currentTarget);\n      var id = jQueryThis.attr('data-id');\n      var bundleString;\n\n      if (typeof jQueryThis.attr('data-bundle') != 'undefined') {\n        bundleString = Hawk.createBundleFromString(jQueryThis.attr('data-bundle'));\n      } else {\n        bundleString = {};\n      }\n\n      this.load(id, bundleString);\n    }\n  }, {\n    key: \"initializeClosePreventer\",\n    value: function initializeClosePreventer() {\n      this.container.on('click', '.' + this.options.contentContainerClass + ', .' + this.options.contentContainerClass + ':not(.' + this.options.closeButtonClass + ')', function (e) {\n        e.stopPropagation();\n        return;\n      });\n      return this;\n    }\n  }, {\n    key: \"refreshDependencies\",\n    value: function refreshDependencies() {\n      if (this.options.mode == Hawk.AjaxOverlayerManagerConstants.Modes.DELEGATE_EVENTS) {\n        this.body.on('click', this.getButtonsSelector(), this.onButtonClick.bind(this));\n      } else {\n        if (typeof this.buttons != 'undefined') {\n          this.buttons.unbind(this.options.eventName);\n        }\n\n        this.buttons = $(this.getButtonsSelector());\n        this.buttons.bind(this.options.eventName, this.onButtonClick.bind(this));\n      }\n    }\n  }, {\n    key: \"actionClose\",\n    value: function actionClose() {\n      this.hide();\n      history.pushState(\"\", document.title, window.location.pathname + window.location.search);\n    }\n  }, {\n    key: \"initializeStructure\",\n    value: function initializeStructure() {\n      this.body = $('body');\n      this.lang = $('html').attr('lang');\n      this.contentContainer = this.container.find('.' + this.options.contentContainerClass);\n      this.content = this.container.find('.' + this.options.contentClass);\n      this.closeButton = this.container.find('.' + this.options.closeButtonClass);\n      this.loadingLayer = this.container.find('.' + this.options.loadingLayerClass);\n    }\n  }, {\n    key: \"run\",\n    value: function run() {\n      var _this40 = this;\n\n      this.initializeStructure();\n      this.refreshDependencies();\n      this.container.click(function (e) {\n        if (_this40.options.closeOnClickOutside) {\n          _this40.actionClose();\n        }\n      });\n      this.container.on('click', '.' + this.options.closeButtonClass, function (e) {\n        _this40.actionClose();\n      });\n      this.initializeClosePreventer();\n      this.options.onInitialize(this, Hawk.getHash());\n    }\n  }]);\n\n  return _class25;\n}(Hawk.SingleThreadClass), _defineProperty(_class25, \"instances\", 0), _class25);\n\nHawk.AjaxOverlayerManager = /*#__PURE__*/function (_Hawk$OverlayerManage) {\n  _inherits(_class26, _Hawk$OverlayerManage);\n\n  var _super14 = _createSuper(_class26);\n\n  function _class26(container, options) {\n    var _this41;\n\n    _classCallCheck(this, _class26);\n\n    _this41 = _super14.call(this, container, options);\n    _this41.defaultOptions = Hawk.mergeWholeObjects(_this41.defaultOptions, {\n      path: \"/ajax/load-overlayer\",\n      buttonClass: 'ajax-overlayer-button'\n    });\n    _this41.options = Hawk.mergeObjects(_this41.defaultOptions, options);\n    return _this41;\n  }\n\n  _createClass(_class26, [{\n    key: \"loadContent\",\n    value: function loadContent(id, bundle) {\n      var _this42 = this;\n\n      if (!this.isWorking()) {\n        this.startWorking();\n\n        if (typeof bundle == 'undefined') {\n          bundle = {};\n        }\n\n        this.loadingLayer.css({\n          display: 'flex'\n        });\n        this.setRequest($.ajax({\n          type: \"POST\",\n          url: this.options.path,\n          dataType: \"json\",\n          data: {\n            id: id,\n            bundle: bundle,\n            lang: this.getLang()\n          },\n          success: function success(result) {\n            _this42.actionLoad(id, result);\n          },\n          error: function error(jqXHR, textStatus, errorThrown) {\n            // here should appear error layer\n            //alert(errorThrown);\n            _this42.hide(); //console.log(jqXHR.responseText);\n\n          },\n          complete: function complete() {\n            _this42.finishWorking();\n\n            _this42.loadingLayer.css({\n              display: 'none'\n            });\n          }\n        }));\n      }\n    }\n  }]);\n\n  return _class26;\n}(Hawk.OverlayerManager);\n\nHawk.SimpleOverlayerManager = /*#__PURE__*/function (_Hawk$OverlayerManage2) {\n  _inherits(_class27, _Hawk$OverlayerManage2);\n\n  var _super15 = _createSuper(_class27);\n\n  function _class27(container, options) {\n    var _this43;\n\n    _classCallCheck(this, _class27);\n\n    _this43 = _super15.call(this, container, options);\n    _this43.defaultOptions = Hawk.mergeWholeObjects(_this43.defaultOptions, {\n      buttonClass: 'simple-overlayer-button',\n      contentToLoadClass: 'simple-overlayer-content'\n    });\n    _this43.options = Hawk.mergeObjects(_this43.defaultOptions, options);\n    return _this43;\n  }\n\n  _createClass(_class27, [{\n    key: \"loadContent\",\n    value: function loadContent(id, bundle) {\n      if (!this.isWorking()) {\n        this.startWorking();\n\n        if (typeof bundle == 'undefined') {\n          bundle = {};\n        }\n\n        this.loadingLayer.css({\n          display: 'flex'\n        });\n        var contentToLoad = $('.' + this.options.contentToLoadClass + '[data-id=\"' + id + '\"]').clone();\n        var result = {\n          id: id,\n          html: contentToLoad.html(),\n          status: Hawk.RequestStatus.SUCCESS\n        };\n        this.actionLoad(id, result);\n        this.finishWorking();\n        this.loadingLayer.css({\n          display: 'none'\n        });\n      }\n    }\n  }]);\n\n  return _class27;\n}(Hawk.OverlayerManager);\n\nHawk.ConfirmationManager = /*#__PURE__*/function (_Hawk$AjaxOverlayerMa) {\n  _inherits(_class28, _Hawk$AjaxOverlayerMa);\n\n  var _super16 = _createSuper(_class28);\n\n  function _class28(container, options) {\n    var _this44;\n\n    _classCallCheck(this, _class28);\n\n    _this44 = _super16.call(this, container);\n    _this44.actions = {};\n    _this44.defaultOptions = Hawk.mergeWholeObjects(_this44.defaultOptions, {\n      eventName: 'click.confirmationManager',\n      mode: Hawk.AjaxOverlayerManagerConstants.modes.DEFAULT,\n      bundleAttrName: 'data-bundle',\n      actionAttrName: 'data-action',\n      buttonClass: 'confirmable-action-button',\n      obtainData: function obtainData(button) {\n        return Hawk.createBundleFromString(button.attr(_this44.options.bundleAttrName));\n      },\n      onLoad: function onLoad(aom, id, result) {\n        var action = aom.getAction(id);\n\n        if (action != null) {\n          console.log(\"intiailize form\");\n          console.log(action);\n          var formBlock = aom.content.find('#' + result.bundle.formID);\n\n          if (formBlock.length > 0) {\n            var formSender = new Hawk.AjaxFormSender(formBlock, [], action.targetPath, action.callbacks);\n            formSender.run();\n          } else {\n            aom.hide();\n          }\n        } else {\n          aom.hide();\n        }\n      }\n    });\n    _this44.options = Hawk.mergeObjects(_this44.defaultOptions, options);\n    console.log(_this44.defaultOptions);\n    return _this44;\n  }\n\n  _createClass(_class28, [{\n    key: \"getButtonsSelector\",\n    value: function getButtonsSelector() {\n      return '.' + this.options.buttonClass;\n    }\n  }, {\n    key: \"getAction\",\n    value: function getAction(name) {\n      if (typeof this.actions[name] != 'undefined') {\n        return this.actions[name];\n      } else {\n        return null;\n      }\n    }\n  }, {\n    key: \"registerAction\",\n    value: function registerAction(name, targetPath, callbacks) {\n      this.actions[name] = {\n        name: name,\n        targetPath: targetPath,\n        callbacks: callbacks\n      };\n      return this;\n    }\n  }, {\n    key: \"onButtonClick\",\n    value: function onButtonClick(e) {\n      e.preventDefault();\n      e.stopPropagation();\n      var jQueryThis = $(e.currentTarget);\n      var actionName = jQueryThis.attr(this.options.actionAttrName);\n      var bundle = this.options.obtainData(jQueryThis);\n      console.log(bundle);\n      var action = this.getAction(actionName);\n      console.log(actionName);\n      console.log(action);\n\n      if (action != null) {\n        this.load(actionName, _objectSpread({\n          'targetPath': action.targetPath\n        }, bundle));\n      }\n    }\n  }, {\n    key: \"refreshDependencies\",\n    value: function refreshDependencies() {\n      if (this.options.mode == Hawk.AjaxOverlayerManagerConstants.modes.DELEGATE_EVENTS) {\n        this.body.on('click', this.getButtonsSelector(), this.onButtonClick.bind(this));\n      } else {\n        if (typeof this.buttons != 'undefined') {\n          this.buttons.unbind(this.options.eventName);\n        }\n\n        this.buttons = $(this.getButtonsSelector());\n        this.buttons.bind(this.options.eventName, this.onButtonClick.bind(this));\n      }\n    }\n  }]);\n\n  return _class28;\n}(Hawk.AjaxOverlayerManager);\n\nHawk.SectionDetector = /*#__PURE__*/function () {\n  function _class29(element, sections, options) {\n    _classCallCheck(this, _class29);\n\n    this.element = $(element);\n    this.sections = sections;\n    this.scrollY = 0;\n    this.defaultOptions = {\n      offset: 0,\n      onSectionInRange: function onSectionInRange(sectionDetector, sectionInRange) {}\n    };\n    this.options = Hawk.mergeObjects(this.defaultOptions, options);\n  }\n\n  _createClass(_class29, [{\n    key: \"getScrollY\",\n    value: function getScrollY() {\n      return this.scrollY;\n    }\n  }, {\n    key: \"getElementBottomEdge\",\n    value: function getElementBottomEdge() {\n      return this.element.position().top + this.element.outerHeight();\n    }\n  }, {\n    key: \"getElementTopEdge\",\n    value: function getElementTopEdge() {\n      return this.element.position().top;\n    }\n  }, {\n    key: \"getElementLeftEdge\",\n    value: function getElementLeftEdge() {\n      return this.element.position().left;\n    }\n  }, {\n    key: \"getSectionBottomEdge\",\n    value: function getSectionBottomEdge(section) {\n      return section.offset().top + section.outerHeight() - this.getScrollY();\n    }\n  }, {\n    key: \"getSectionLeftEdge\",\n    value: function getSectionLeftEdge(section) {\n      return section.offset().left;\n    }\n  }, {\n    key: \"getSectionRightEdge\",\n    value: function getSectionRightEdge(section) {\n      return section.offset().left + section.outerWidth();\n    }\n  }, {\n    key: \"getSectionTopEdge\",\n    value: function getSectionTopEdge(section) {\n      return section.offset().top - this.getScrollY();\n    }\n  }, {\n    key: \"checkIfSectionInRange\",\n    value: function checkIfSectionInRange(section) {\n      return this.getSectionTopEdge(section) <= this.getElementTopEdge() && this.getSectionLeftEdge(section) <= this.getElementLeftEdge() && this.getSectionRightEdge(section) > this.getElementLeftEdge() && this.getSectionBottomEdge(section) >= this.getElementBottomEdge();\n    }\n  }, {\n    key: \"checkSections\",\n    value: function checkSections() {\n      var that = this;\n      this.sections.each(function () {\n        // console.log();\n        // console.log(\"____________________________________\");\n        // console.log(\"scrollTop: \" + that.getScrollY());\n        // console.log(\"Element top: \" + that.getElementTopEdge());\n        // console.log(\"Element bottom: \" + that.getElementBottomEdge());\n        if (that.checkIfSectionInRange($(this))) {\n          // console.log($(this).attr('class') + \" offset top:::::::::: \" + $(this).offset().top);\n          // console.log($(this).attr('class') + \" top edge:::::::: \" + that.getSectionTopEdge($(this)));\n          // console.log($(this).attr('class') + \" bottom edge::::::::: \" + that.getSectionBottomEdge($(this)));\n          that.options.onSectionInRange(that, $(this));\n        } // else if ($(this).hasClass('section-08')) {\n        // \tconsole.log($(this).attr('class') + \" offset top: \" + $(this).offset().top);\n        // \tconsole.log($(this).attr('class') + \" top edge: \" + that.getSectionTopEdge($(this)));\n        // \tconsole.log($(this).attr('class') + \" bottom edge: \" + that.getSectionBottomEdge($(this)));\n        // }\n\n      });\n    }\n  }, {\n    key: \"run\",\n    value: function run() {\n      var _this45 = this;\n\n      $(window).scroll(function (e) {\n        _this45.scrollY = $(window).scrollTop();\n\n        _this45.checkSections();\n      }); //setTimeout(() => {\n\n      this.scrollY = $(window).scrollTop();\n      this.checkSections(); //}, 200);\n    }\n  }]);\n\n  return _class29;\n}();\n\nHawk.BookmarksManager = function (container, options) {\n  this.container = $(container);\n  this.content;\n  this.contentWrapper;\n  this.bookmarks;\n  this.current; // current bookmark container\n\n  this.currentHeight = 0;\n  this.currentWidth;\n  this.loading = false;\n  var that = this;\n  this.defaultOptions = {\n    responsive: true,\n    activeScroll: false,\n    activeScrollWidth: 480,\n    slideDuration: 200,\n    fadeDuration: 200,\n    rootContainer: window,\n    activeBookmarkClass: \"active\",\n    bookmarksClass: \"bookmarks-manager__bookmark-container\",\n    contentClass: \"bookmarks-manager__content\",\n    contentWrapperClass: \"bookmarks-manager__content-wrapper\",\n    bookmarkClass: \"bookmarks-manager__bookmark\",\n    bookmarkContentClass: \"bookmarks-manager__bookmark-content\",\n    bookmarkActiveCallback: function bookmarkActiveCallback(bookmarkContainer) {},\n    bookmarkUnactiveCallback: function bookmarkUnactiveCallback(bookmarkContainer) {},\n    changeContentCallback: function changeContentCallback(content) {},\n    changeBookmarkCallback: function changeBookmarkCallback(bookmarkContainer) {},\n    changeHashCallback: function changeHashCallback(hash) {}\n  };\n  this.options = Hawk.mergeObjects(this.defaultOptions, options);\n\n  this.isResponsive = function () {\n    return this.options.responsive;\n  };\n\n  this.isSmallDevice = function () {\n    return this.isResponsive() && !this.content.is(\":visible\");\n  };\n\n  this.changeContent = function (content, callback, preventAutoscroll) {\n    var container = this.content; // if (outerContainer === undefined) {\n    //   container = this.content;\n    // } else container = outerContainer;\n\n    if (typeof preventAutoscroll == 'undefined') {\n      preventAutoscroll = false;\n    }\n\n    var showing = function showing() {\n      container.hide();\n      container.html(content.show());\n      container.velocity(\"slideDown\", {\n        duration: that.options.slideDuration,\n        complete: function complete() {\n          container.velocity({\n            opacity: 1\n          }, {\n            duration: that.options.fadeDuration,\n            complete: function complete() {\n              that.options.changeContentCallback(that.content);\n              if (typeof callback == \"function\") callback();\n              that.loading = false;\n              var currentHeight = that.content.outerHeight();\n              that.currentHeight = currentHeight;\n              that.contentWrapper.css({\n                \"min-height\": that.currentHeight + \"px\"\n              });\n            }\n          });\n        }\n      });\n    };\n\n    if (container.css(\"opacity\") != 0) {\n      container.velocity({\n        opacity: 0\n      }, {\n        duration: that.options.fadeDuration,\n        complete: function complete() {\n          container.html(\"\");\n          showing();\n        }\n      });\n    } else {\n      showing();\n    }\n\n    if (this.options.activeScroll && Hawk.w < this.options.activeScrollWidth && !preventAutoscroll) {\n      var id = this.content.attr(\"id\");\n\n      if (typeof id != 'undefined') {\n        Hawk.scrollToElement({\n          anchor: \"#\" + id,\n          container: this.options.rootContainer\n        });\n      }\n    }\n\n    return this;\n  };\n\n  this.changeBookmark = function (bookmarkContainer, preventAutoscroll) {\n    this.unsetBookmarkActive();\n    this.current = bookmarkContainer;\n    var bookmark = this.current.find(\".\" + this.options.bookmarkClass);\n    var content = this.current.find(\".\" + this.options.bookmarkContentClass);\n    this.setBookmarkActive(this.current);\n\n    if (this.isSmallDevice()) {\n      content.velocity(\"slideDown\", {\n        duration: that.options.slideDuration,\n        complete: function complete() {\n          that.options.changeContentCallback(content);\n          that.loading = false;\n        }\n      });\n    } else {\n      this.changeContent(content.clone(true), function () {}, preventAutoscroll);\n    }\n\n    return this;\n  };\n\n  this.unsetBookmarkActive = function () {\n    if (this.current !== undefined) {\n      var current = this.current;\n      current.find(\".\" + this.options.bookmarkClass).removeClass(this.options.activeBookmarkClass);\n      current.find(\".\" + this.options.bookmarkContentClass).velocity(\"slideUp\", {\n        duration: that.options.slideDuration\n      });\n      this.current = undefined;\n      this.options.bookmarkUnactiveCallback(current);\n    }\n\n    return this;\n  };\n\n  this.setBookmarkActive = function (bookmarkContainer) {\n    var bookmark = bookmarkContainer.find(\".\" + this.options.bookmarkClass);\n    bookmark.addClass(this.options.activeBookmarkClass);\n    this.options.bookmarkActiveCallback(bookmarkContainer);\n    return this;\n  };\n\n  this.launchBookmark = function (n, preventAutoscroll) {\n    this.changeBookmark(this.bookmarks.eq(n), preventAutoscroll);\n    return this;\n  };\n\n  this.updateOptions = function (options) {\n    this.options = Hawk.mergeObjects(this.options, options);\n    return this;\n  };\n\n  this.clear = function (callback) {\n    //this.current = undefined;\n    this.unsetBookmarkActive();\n    this.content.velocity({\n      opacity: 0\n    }, {\n      duration: 200,\n      complete: function complete() {\n        if (callback !== undefined) {\n          callback();\n        }\n      }\n    });\n    return this;\n  };\n\n  this.remindActiveBookmark = function () {\n    if (this.isSmallDevice()) {}\n\n    return this;\n  };\n\n  this.launchBookmarkByName = function (name, preventAutoscroll) {\n    var finalName = name;\n    this.bookmarks.each(function () {\n      var current = $(this);\n\n      if (current.attr(\"data-hash\") == finalName) {\n        that.changeBookmark(current, preventAutoscroll);\n        return;\n      }\n    });\n  };\n\n  this.refresh = function () {\n    var current = this.current;\n\n    if (current !== undefined) {\n      this.clear(function () {\n        that.changeBookmark(current, true);\n      });\n    }\n\n    return this;\n  };\n\n  this.run = function (defaultBookmark) {\n    this.bookmarks = this.container.find(\".\" + this.options.bookmarksClass);\n    this.content = this.container.find(\".\" + this.options.contentClass);\n    this.contentWrapper = this.container.find(\".\" + this.options.contentWrapperClass);\n\n    if (typeof defaultBookmark == 'undefined') {\n      defaultBookmark = 0;\n    }\n\n    var refresh;\n    this.currentWidth = Hawk.w;\n    $(window).resize(function () {\n      if (Hawk.w != that.currentWidth) {\n        clearTimeout(refresh);\n        refresh = setTimeout(function () {\n          that.refresh();\n          that.currentWidth = Hawk.w;\n        }, 100);\n      }\n    });\n    var hash = window.location.hash;\n\n    if (hash.length > 0) {\n      hash = hash.substr(1); //console.log(hash);\n\n      var chosenBookmark = this.bookmarks.filter('[data-hash=\"' + hash + '\"]');\n\n      if (chosenBookmark.length > 0) {\n        this.launchBookmarkByName(hash);\n        this.options.changeHashCallback(hash);\n      } else {\n        this.launchBookmark(defaultBookmark, true);\n      }\n    } else {\n      this.launchBookmark(defaultBookmark, true);\n    }\n\n    this.bookmarks.click(function () {\n      if (that.loading == true) {\n        return;\n      }\n\n      if (that.current !== undefined && that.current.is($(this))) {\n        that.remindActiveBookmark();\n      } else {\n        that.changeBookmark($(this));\n        that.loading = true;\n      }\n    });\n    return this;\n  };\n};\n\nHawk.SlideMenu = function (id, options) {\n  this.menu = $('#' + id);\n  this.wrapper = this.menu.find('> div');\n  this.mode;\n  this.direction;\n  this.state;\n  this.toggler;\n  this.close;\n  this.directionClassName;\n  this.modeClassName;\n  this.openClassName;\n  this.states = {\n    closed: 'closed',\n    open: 'open'\n  };\n  this.modes = {\n    slideFade: 'slide-fade',\n    slide: 'slide',\n    fade: 'fade',\n    radial: 'radial'\n  };\n  this.directions = {\n    top: 'top',\n    right: 'right',\n    bottom: 'bottom',\n    left: 'left'\n  };\n  this.defaultOptions = {\n    slideDuration: 500,\n    fadeDuration: 500,\n    direction: 'top',\n    mode: 'slide',\n    toggler: $('.menu-toggler'),\n    close: this.menu.find('.menu-close'),\n    mainClass: 'slide-menu',\n    showCallback: function showCallback(menu) {},\n    hideCallback: function hideCallback(menu, hideCall) {\n      hideCall();\n    }\n  };\n  this.options = Hawk.mergeObjects(this.defaultOptions, options);\n\n  this.show = function () {\n    var that = this;\n    var timeRemaining = this.totalDuration();\n    that.options.showCallback(that.menu); // setTimeout(function() {\n    //     that.options.showCallback(that.menu);\n    // }, timeRemaining);\n\n    if (this.options.mode == this.modes.fade) {\n      this.menu.velocity(\"fadeIn\", {\n        duration: this.options.fadeDuration\n      });\n    }\n\n    this.menu.addClass(this.openClassName);\n    this.state = this.states.open;\n    this.toggler.addClass('open');\n    this.toggler.find('.icon-hamburger').addClass('open');\n    return this;\n  };\n\n  this.hide = function () {\n    var that = this;\n    this.options.hideCallback(this.menu, function () {\n      if (that.options.mode == that.modes.fade) {\n        that.menu.velocity(\"fadeOut\", {\n          duration: that.options.fadeDuration\n        });\n      }\n\n      that.menu.removeClass(that.openClassName);\n    });\n    this.state = this.states.closed;\n    this.options.toggler.removeClass('open');\n    this.options.toggler.find('.icon-hamburger').removeClass('open');\n    return this;\n  };\n\n  this.totalDuration = function () {\n    if (this.options.mode == this.modes.slide) {\n      return this.options.slideDuration;\n    } else if (this.options.mode == this.modes.slideFade) {\n      return this.options.slideDuration + this.options.fadeDuration;\n    } else if (this.options.mode == this.modes.fade) {\n      return this.options.fadeDuration;\n    } else {\n      return 0;\n    }\n  };\n\n  this.run = function () {\n    var that = this;\n    this.toggler = this.options.toggler;\n    this.close = this.options.close;\n    this.modeClassName = this.options.mainClass + \"--\" + this.options.mode;\n    this.directionClassName = this.options.mainClass + \"--\" + this.options.direction;\n    this.openClassName = this.options.mainClass + \"--open\";\n    this.menu.addClass(this.directionClassName);\n    this.menu.addClass(this.modeClassName);\n    this.hide();\n    this.toggler.click(function () {\n      if (that.state == that.states.open) {\n        that.hide();\n      } else {\n        that.show();\n      }\n    });\n    this.close.click(function () {\n      that.hide();\n    });\n    return this;\n  };\n};\n\nHawk.Routes = {\n  routes: {},\n  path: Hawk.getPath(),\n  regexp: new RegExp(\"\"),\n  is: function is(route) {\n    this.regexp = new RegExp(route);\n    return this.regexp.test(Hawk.getPath());\n  },\n  contains: function contains(parameterName) {\n    var regexp = new RegExp('/' + parameterName + '/');\n    var endRegexp = new RegExp('/' + parameterName + '$');\n    return regexp.test(Hawk.getPath()) || endRegexp.test(Hawk.getPath());\n  },\n  getParameterValue: function getParameterValue(parameterString) {\n    var parts = parameterString.split('/');\n\n    if (parts.length > 2) {\n      return parts[2];\n    } else {\n      return null;\n    }\n  },\n  get: function get(parameterName) {\n    if (this.contains(parameterName)) {\n      var pattern = '/' + parameterName + '/([0-9a-zA-Z\\-]+)';\n      var regexp = new RegExp(pattern + '/');\n      var endRegexp = new RegExp(pattern + '$');\n      var results = regexp.exec(Hawk.getPath());\n\n      if (results != null) {\n        return this.getParameterValue(results[0]);\n      } else {\n        results = endRegexp.exec(Hawk.getPath());\n\n        if (results != null) {\n          return this.getParameterValue(results[0]);\n        } else {\n          return null;\n        }\n      }\n    } else {\n      return null;\n    }\n  }\n};\n\nHawk.HeightAdjuster = /*#__PURE__*/function () {\n  function _class30(container, options) {\n    _classCallCheck(this, _class30);\n\n    this.container = $(container);\n    this.defaultOptions = {\n      itemContainerClass: 'adjustable-item-container',\n      itemClass: 'adjustable-item'\n    };\n    this.options = Hawk.mergeObjects(this.defaultOptions, options);\n    this.itemsCollection = this.container.find('.' + this.options.itemContainerClass);\n  }\n\n  _createClass(_class30, [{\n    key: \"adjust\",\n    value: function adjust() {\n      var that = this;\n      var maxHeight = 0;\n      this.itemsCollection = this.container.find('.' + this.options.itemContainerClass);\n      this.itemsCollection.each(function () {\n        var itemHeight = $(this).find('.' + that.options.itemClass).outerHeight();\n\n        if (itemHeight > maxHeight) {\n          maxHeight = itemHeight;\n        }\n      });\n      this.itemsCollection.css({\n        'height': maxHeight + 'px'\n      });\n    }\n  }]);\n\n  return _class30;\n}();\n\nHawk.Countdown = /*#__PURE__*/function () {\n  function Countdown(container, targetDate, options) {\n    _classCallCheck(this, Countdown);\n\n    this.container = $(container);\n    this.targetDate = targetDate;\n    this.interval;\n    this.finished = false;\n    this.defaultOptions = {\n      valueClassNames: {\n        hours: 'hawk-countdown__hours',\n        minutes: 'hawk-countdown__minutes',\n        seconds: 'hawk-countdown__seconds'\n      },\n      captionClassNames: {\n        hours: 'hawk-countdown__hours-caption',\n        minutes: 'hawk-countdown__minutes-caption',\n        seconds: 'hawk-countdown__seconds-caption'\n      },\n      unitForms: {\n        hours: {\n          'single': \"hour\",\n          'many': \"hours\"\n        },\n        minutes: {\n          'single': \"minute\",\n          'many': \"minutes\"\n        },\n        seconds: {\n          'single': \"second\",\n          'many': \"seconds\"\n        }\n      },\n      onTargetReached: function onTargetReached(countdown) {}\n    };\n    this.options = Hawk.mergeObjects(this.defaultOptions, options);\n  }\n\n  _createClass(Countdown, [{\n    key: \"getCurrentTime\",\n    value: function getCurrentTime() {\n      return new Date();\n    }\n  }, {\n    key: \"getTimeDifference\",\n    value: function getTimeDifference() {\n      var now = this.getCurrentTime();\n      var timeDifference = this.targetDate.getTime() - now.getTime();\n\n      if (timeDifference > 0) {\n        var hours = Math.floor(timeDifference / 1000 / 60 / 60);\n        timeDifference -= hours * 1000 * 60 * 60;\n        var minutes = Math.floor(timeDifference / 1000 / 60);\n        timeDifference -= minutes * 1000 * 60;\n        var seconds = Math.floor(timeDifference / 1000);\n        return {\n          hours: hours,\n          minutes: minutes,\n          seconds: seconds\n        };\n      } else {\n        return {\n          hours: 0,\n          minutes: 0,\n          seconds: 0\n        };\n      }\n    }\n  }, {\n    key: \"isTargetReached\",\n    value: function isTargetReached(timeLeft) {\n      return timeLeft.hours == 0 && timeLeft.minutes == 0 && timeLeft.seconds == 0;\n    }\n  }, {\n    key: \"update\",\n    value: function update() {\n      var timeLeft = this.getTimeDifference();\n      this.values.hours.html(Hawk.addZeros(timeLeft.hours, 2));\n      this.values.minutes.html(Hawk.addZeros(timeLeft.minutes, 2));\n      this.values.seconds.html(Hawk.addZeros(timeLeft.seconds, 2));\n\n      if (timeLeft.hours == 1) {\n        this.captions.hours.html(this.options.unitForms.hours.single);\n      } else {\n        this.captions.hours.html(this.options.unitForms.hours.many);\n      }\n\n      if (timeLeft.minutes == 1) {\n        this.captions.minutes.html(this.options.unitForms.minutes.single);\n      } else {\n        this.captions.minutes.html(this.options.unitForms.minutes.many);\n      }\n\n      if (timeLeft.seconds == 1) {\n        this.captions.seconds.html(this.options.unitForms.seconds.single);\n      } else {\n        this.captions.seconds.html(this.options.unitForms.seconds.many);\n      }\n\n      if (this.isTargetReached(timeLeft) && !this.finished) {\n        this.finished = true;\n        clearInterval(this.interval);\n        this.options.onTargetReached(this);\n      }\n    }\n  }, {\n    key: \"run\",\n    value: function run() {\n      var _this46 = this;\n\n      this.values = {\n        hours: this.container.find('.' + this.options.valueClassNames.hours),\n        minutes: this.container.find('.' + this.options.valueClassNames.minutes),\n        seconds: this.container.find('.' + this.options.valueClassNames.seconds)\n      };\n      this.captions = {\n        hours: this.container.find('.' + this.options.captionClassNames.hours),\n        minutes: this.container.find('.' + this.options.captionClassNames.minutes),\n        seconds: this.container.find('.' + this.options.captionClassNames.seconds)\n      };\n      this.update();\n      this.interval = setInterval(function () {\n        _this46.update();\n      }, 1000);\n    }\n  }]);\n\n  return Countdown;\n}();\n\nHawk.Launchers = {};\n\nHawk.Launchers.DetailsList = function (elements, options) {\n  var collection = $(elements);\n  var instances = [];\n  collection.each(function () {\n    var instance = new Hawk.DetailsList($(this), options);\n    instance.run();\n  });\n  return instances;\n};\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Hawk);\n\n//# sourceURL=webpack://hawk-framework-v2/./src/js/Hawk-v2.js?");

/***/ }),

/***/ "./src/js/master.js":
/*!**************************!*\
  !*** ./src/js/master.js ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _Hawk_v2__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Hawk-v2 */ \"./src/js/Hawk-v2.js\");\n\n$(document).ready(function () {\n  var App = {\n    Blocks: {},\n    Examples: {},\n    Widgets: {\n      Overlayers: {},\n      Dropdowns: {},\n      MoreContentManagers: {},\n      DetailsLists: {},\n      SlidingLayerManagers: {},\n      FormSenders: {}\n    }\n  }; // It's good to keep only necessary initialization and assign them to App.Widgets[AppropriateType]\n\n  var HawkExamples = {};\n  HawkExamples.exemplaryDropdown = new _Hawk_v2__WEBPACK_IMPORTED_MODULE_0__[\"default\"].Dropdown($('#exemplary-dropdown'));\n  HawkExamples.exemplaryDropdown.run(); //console.log(HawkExamples.exemplaryDropdown.selectByValue(2));\n\n  HawkExamples.expandingDropdown = new _Hawk_v2__WEBPACK_IMPORTED_MODULE_0__[\"default\"].Dropdown($('#expanding-dropdown'), {\n    type: _Hawk_v2__WEBPACK_IMPORTED_MODULE_0__[\"default\"].DropdownConstants.Types.EXPANDING\n  });\n  HawkExamples.expandingDropdown.run();\n  HawkExamples.layeredSection = new _Hawk_v2__WEBPACK_IMPORTED_MODULE_0__[\"default\"].LayeredSection($('#exemplary-layered-section'));\n  HawkExamples.layeredSection.run();\n  HawkExamples.moreContentManager = new _Hawk_v2__WEBPACK_IMPORTED_MODULE_0__[\"default\"].MoreContentManager(1, {});\n  HawkExamples.moreContentManager.run();\n  HawkExamples.detailsList = new _Hawk_v2__WEBPACK_IMPORTED_MODULE_0__[\"default\"].DetailsList($('#exemplary-details-list'), {});\n  HawkExamples.detailsList.run();\n  $('.scrollable-section').mCustomScrollbar({\n    axis: \"y\",\n    setTop: 0\n  });\n  HawkExamples.slidingLayerManager = new _Hawk_v2__WEBPACK_IMPORTED_MODULE_0__[\"default\"].SlidingLayerManager(1, {\n    onShow: function onShow(slm, button, layer) {\n      var content = layer.find('.edge-section__content');\n      var currentHeight = parseInt(content.innerHeight()) - parseInt(content.css('paddingTop')) - parseInt(content.css('paddingBottom'));\n      layer.find('.scrollable-section').css({\n        height: currentHeight + \"px\"\n      }).mCustomScrollbar({\n        axis: \"y\"\n      });\n    }\n  });\n  HawkExamples.slidingLayerManager.run();\n  var HawkVariables = {};\n  HawkVariables.colorFieldsController = new _Hawk_v2__WEBPACK_IMPORTED_MODULE_0__[\"default\"].FieldController($('.colors-section input'), {\n    onChange: function onChange(field, value) {\n      console.log(field, value);\n      var label = field.parents('.form-field');\n      console.log(label);\n      label.find('.color-sample').css({\n        backgroundColor: value\n      });\n    }\n  });\n  HawkVariables.colorFieldsController.run();\n  HawkVariables.ajaxLoadingItemsManager = new _Hawk_v2__WEBPACK_IMPORTED_MODULE_0__[\"default\"].AjaxLoadingItemsManager($(\"#exemplary-ajax-loading-items-manager\"), {\n    itemsPerLoading: 3\n  });\n  HawkVariables.ajaxLoadingItemsManager.run();\n  HawkVariables.ajaxLoadingItemsManager.load(0);\n  HawkVariables.ajaxLoadingItemsManager.container.find('.hawk-ajax-loading-items-manager__clear-button').click(function () {\n    HawkVariables.ajaxLoadingItemsManager.clear();\n  });\n  HawkExamples.StaticFormSender = new _Hawk_v2__WEBPACK_IMPORTED_MODULE_0__[\"default\"].StaticFormSender($('#exemplary-static-form'), [new _Hawk_v2__WEBPACK_IMPORTED_MODULE_0__[\"default\"].TextFormField(\"chess-figure-name\", {\n    validate: _Hawk_v2__WEBPACK_IMPORTED_MODULE_0__[\"default\"].Validator.isNotEmpty\n  })], function (formSender) {\n    var validationResult = formSender.validate();\n\n    if (validationResult.length == 0) {\n      var field = formSender.getField('chess-figure-name');\n      var value = field.getValue().toLowerCase();\n      var chessFigures = ['knight', 'queen', 'king', 'bishop', 'tower', 'skoczek', 'koń', 'hetman', 'król', 'goniec', 'laufer', 'wieża'];\n\n      if (chessFigures.indexOf(value) > -1) {\n        formSender.options.onCorrect({\n          message: \"Ok, great!\"\n        });\n      } else {\n        formSender.options.onError({\n          message: \"Cannot you play chess, really?\"\n        });\n      }\n    } else {\n      formSender.changeMessage(\"Please fill the fields correctly.\");\n    }\n\n    formSender.finishWorking();\n  });\n  HawkExamples.StaticFormSender.run();\n  HawkExamples.AjaxFormSender = new _Hawk_v2__WEBPACK_IMPORTED_MODULE_0__[\"default\"].AjaxFormSender($('#exemplary-ajax-form'), [new _Hawk_v2__WEBPACK_IMPORTED_MODULE_0__[\"default\"].TextFormField(\"name\", {\n    validate: _Hawk_v2__WEBPACK_IMPORTED_MODULE_0__[\"default\"].Validator.isNotEmpty\n  })], \"/ajax/chess-figure\");\n  HawkExamples.AjaxFormSender.run(); // blabla\n\n  App.Blocks.ajaxRequestContainer = {\n    result: $('#exemplary-ajax-request-manager .simple-ajax-request-container__result'),\n    button: $('#exemplary-ajax-request-manager .simple-ajax-request-container__button')\n  };\n  App.Examples.ajaxRequestManager = new _Hawk_v2__WEBPACK_IMPORTED_MODULE_0__[\"default\"].AjaxRequestManager({// options and callbacks\n  });\n  App.Blocks.ajaxRequestContainer.button.click(function (e) {\n    e.preventDefault();\n    App.Examples.ajaxRequestManager.get(\"/ajax/draw-a-colour\", {\n      onSuccess: function onSuccess(result) {\n        App.Blocks.ajaxRequestContainer.result.html(result.colour);\n      },\n      onError: function onError() {\n        App.Blocks.ajaxRequestContainer.result.html(\"\");\n      },\n      onException: function onException() {\n        App.Blocks.ajaxRequestContainer.result.html(\"\");\n      }\n    });\n  });\n  App.Examples.AjaxOverlayerManager = new _Hawk_v2__WEBPACK_IMPORTED_MODULE_0__[\"default\"].AjaxOverlayerManager($('#overlayer'), {// options and callbacks\n  });\n  App.Examples.AjaxOverlayerManager.run();\n  App.Examples.SimpleOverlayerManager = new _Hawk_v2__WEBPACK_IMPORTED_MODULE_0__[\"default\"].SimpleOverlayerManager($('#overlayer'), {// options and callbacks\n  });\n  App.Examples.SimpleOverlayerManager.run();\n  App.Examples.ItemsManager = new _Hawk_v2__WEBPACK_IMPORTED_MODULE_0__[\"default\"].ItemsManager($('#exemplary-items-manager'), {});\n  App.Examples.ItemsManager.run(); // App.Examples.Pager = new Hawk.Pager($('#exemplary-pager'), {\n  //     onClick: (pager, nr) => {\n  //         console.log(nr);\n  //         pager.updatePage(nr);\n  //     }\n  // });\n  // App.Examples.Pager.run(10);\n  //\n  // App.Examples.AjaxItemsManager = new Hawk.AjaxItemsManager($('#exemplary-ajax-items-manager'), {\n  //\n  // });\n  //\n  // App.Examples.AjaxItemsManagerPager = new Hawk.Pager($('#exemplary-ajax-items-manager .hawk-pager'), {\n  //     onPageChanged: (pager, nr) => {\n  //         console.log(nr);\n  //\n  //         App.Examples.AjaxItemsManager.load(nr);\n  //     }\n  // });\n  // App.Examples.AjaxItemsManagerPager.run();\n  //\n  // App.Examples.AjaxItemsManager.addPager(App.Examples.AjaxItemsManagerPager);\n  //\n  // App.Examples.AjaxItemsManager.run(1);\n\n  _Hawk_v2__WEBPACK_IMPORTED_MODULE_0__[\"default\"].Launchers.DetailsList($('.presentation-details-list'), {\n    slideSpeed: 500,\n    autoHide: false,\n    onShow: function onShow(detailsList, header, contentContainer) {\n      header.find('.icon-arrow').addClass('icon-arrow--north').removeClass('icon-arrow--south');\n    },\n    onHide: function onHide(detailsList, header, contentContainer) {\n      header.find('.icon-arrow').addClass('icon-arrow--south').removeClass('icon-arrow--north');\n    }\n  });\n  setTimeout(function () {\n    HawkExamples.anchorsManager = new _Hawk_v2__WEBPACK_IMPORTED_MODULE_0__[\"default\"].AnchorsManager();\n    HawkExamples.anchorsManager.run();\n  }, 1000); // App.Examples.RevealingItem = new Hawk.RevealingItem($('#exemplary-revealing-item'));\n  // App.Examples.RevealingItem.run();\n  // End of examples\n});\n\n//# sourceURL=webpack://hawk-framework-v2/./src/js/master.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/js/master.js");
/******/ 	
/******/ })()
;